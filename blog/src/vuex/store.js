import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex);

let slidelistdata = [];
let currentDetailData = null;
let navlistdata = [
  {
    navname: '作品',
    navid: 1,
    isActive: false,
    routename: 'j-works',
    className: 'works'
  },
  // {
  //   navname: '评论',
  //   navid: 3,
  //   isActive: false,
  //   routename: '',
  //   className: 'recommend'
  // },
  {
    navname: 'GITHUb',
    navid: 4,
    isActive: false,
    routename: '',
    url: 'https://github.com/stupidWall',
    className: 'github'
  }
];

/*===================================== 33333 ==========================*/
let result = [];
  slidelistdata = {
    "8": {
      "created_at": "2016-10-01 13:17:48",
      "desc": "AngularJS有着诸多特性，最为核心的是：MVVM、模块化、自动化双向数据绑定、语义化标签、依赖注入等等",
      "face": "/public/images/3.jpg",
      "id": 8,
      "title": "Angular2.0入门使用~"
    },
    "85": {
      "created_at": "2016-11-04 11:55:31",
      "desc": "Angular数据双向绑定，代码模块化，依赖注入以及强大的指令、服务等...",
      "face": "/public/images/3.jpg",
      "id": 85,
      "title": "Angular1.3相关内容~"
    },
    "86": {
      "created_at": "2016-11-06 01:12:35",
      "desc": "一个用来创建可复用，可聚合web组件的js库",
      "face": "/public/images/3.jpg",
      "id": 86,
      "title": "关于ReactJs"
    },
    "87": {
      "created_at": "2016-11-07 05:42:13",
      "desc": "快速部署开发环境，把更多精力放到业务逻辑的开发上去，照着步骤几分钟即可搭好",
      "face": "/public/images/3.jpg",
      "id": 87,
      "title": "React+Webpack+ES5快速部署开发环境"
    },
    "89": {
      "created_at": "2016-11-13 05:05:22",
      "desc": "如何规范书写angular开发代码？如何注入服务更加直观？如何处理回调？controller as vm写法是怎样的？请详读...",
      "face": "/public/images/3.jpg",
      "id": 89,
      "title": "Angular1.x开发规范"
    },
    "90": {
      "created_at": "2016-11-13 05:13:53",
      "desc": "引入AngularStrap这个模块，可以使用到它里面的非常多的指令/服务，只需要把服务注入控制器来就可以用啦",
      "face": "/public/images/2.jpg",
      "id": 90,
      "title": "AngularStrap使用"
    },
    "91": {
      "created_at": "2016-11-13 13:32:22",
      "desc": "突然想到要用什么，可找半天找不到了把？进来看看，肯定有你需要的...",
      "face": "/public/images/2.jpg",
      "id": 91,
      "title": "各种js框架、开发工具以及资料等超链接"
    },
    "92": {
      "created_at": "2016-11-14 11:51:15",
      "desc": "making a web app using React, React Router, ES6 and more",
      "face": "/public/images/2.jpg",
      "id": 92,
      "title": "React API"
    },
    "93": {
      "created_at": "2016-11-15 01:58:29",
      "desc": "上leetcode做的题目的一个总结积累",
      "face": "/public/images/2.jpg",
      "id": 93,
      "title": "LeetCode"
    },
    "94": {
      "created_at": "2016-11-20 01:12:52",
      "desc": "在 API 与设计两方面上 Vue.js 都比 Angular 1 简单得多，因此你可以快速地掌握它的全部特性并投入开发",
      "face": "/public/images/2.jpg",
      "id": 94,
      "title": "vue使用"
    },
    "95": {
      "created_at": "2017-01-01 13:30:00",
      "desc": "Mac系统Git生成ssh公钥",
      "face": "/public/images/4.jpg",
      "id": 95,
      "title": "Mac系统Git生成ssh公钥"
    },
    "96": {
      "created_at": "2017-01-16 16:35:04",
      "desc": "对于移动互联网的前端开发，移动端的项目需求尤其强烈，用户体验要求更高，不能再简单地通过重新渲染来更新数据。",
      "face": "/public/images/4.jpg",
      "id": 96,
      "title": "Vue.js权威指南"
    },
    "97": {
      "created_at": "2017-01-23 09:02:50",
      "desc": "样式是依赖iview， 根据iview的功能写的选项卡组件",
      "face": null,
      "id": 97,
      "title": "Vue.js选项卡组件编写"
    }
  }
for (let attr in slidelistdata) {
  result.push(slidelistdata[attr]);
}
for (let i = 0; i < result.length; i++) {
  result[i]['isActive'] = false;
  result[i]['falseActive'] = false;
}

currentDetailData = {
    "id": 85,
    "content": "&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1. 当你打开一个浏览器，并在地址栏输入http://google.com后，浏览器会“询问”网络（更准确&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;地说，是“询问”DNS服务器）google.com对应的IP地址是什么？如果DNS服务器知道你要找的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;IP地址，就会将其结果返回；如果不知道，它会将请求转发给其他DNS服务器，直到在某一台DNS&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;服务器上找到对应的IP地址记录。在终端输入下列指令，可以观察DNS服务器的响应内容：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$ dig google.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;DNS服务器返回了你要访问的计算机的IP地址（例如找到了google.com对应的IP地址）后，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;它就会向这个IP地址对应的计算机请求你要访问的页面。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;现在，计算机已经知道了在哪个IP地址可以访问到http://google.com，它会向Google的服务器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;请求显示这个页面所需的HTML&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当远程服务器把HTML文档发送回来后，浏览器会对文档进行渲染。渲染就是通过一系列操&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;作，使HTML页面按照设计之初的既定方式显示&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;完全使用JavaScript编写的客户端技术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS主要用于构建单页面Web应用。它通过增加开发人员和常见Web应用开发任务之间&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;的抽象级别，使构建交互式的现代Web应用变得更加简单。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS的开发团队将其描述为一种构建动态Web应用的结构化框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS使开发Web应用变得非常简单，同时也降低了构建复杂应用的难度。它提供了开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;者在现代Web应用中经常要用到的一系列高级功能， 例如&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;解耦应用逻辑、数据模型和视图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Ajax服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;依赖注入&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;浏览历史&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在其他JavaScript框架中，我们被迫从自定义的JavaScript对象中进行扩展，并从外到内操作&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;DOM&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;以jQuery① 为例，为了在DOM中插入一个按钮元素，我们必须知道要把元素放到何处，并&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在合适的位置插入它&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;尽管这个过程并不复杂，但是它要求开发者对整个DOM结构都有所了解，并强迫我们在&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;JavaScript代码中加入复杂的控制逻辑，用以操作外部DOM。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS则通过原生的Model-View-Controller（MVC，模型视图控制器）功能增强了&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;HTML&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;构建出令人印象深刻并且极富表现力的客户端应用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;开发者可将页面的一部分封装为一个应用，并且不强迫整个页面都使用AngularJS进&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;行开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个特质在某些情况下非常有用，比如你的工作流程中已经包含了另外一个框架，或者你&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;只希望页面中的某一部分是动态的，而剩下的部分是静态的或者是由其他JavaScript框架来控制的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;传统Web框架中，控制器将多个模型中的数据和模板组合在一起形成视图， 这个组合过程会产生一个单向视图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果没有创建任何自定义的JavaScript组件，视图只会体现它渲染时模型暴露出的数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS则采用了完全不同的解决方案。它创建实时模板来代替视图，而不是将数据合并&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;进模板之后更新DOM&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;任何一个独立视图组件中的值都是动态替换的。这个功能可以说是&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS中最重要的功能之一&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;自动数据绑定使我们可以将视图理解为模型状态的映射。当客户端的数据模型发生变化时，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;视图就能反映出这些变化，并且不需要写任何自定义的代码，它就可以工作。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在MVC（Model View Controller，模型视图控制器）的世界里，控制器可以不必担心会牵&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;扯到渲染视图的工作。这样我们就不必再担心如何分离视图和控制器逻辑&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当AngularJS认为某个值可能发生变化时，它会运行自己的事件循环来检查这个值是否变&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;“脏”。如果该值从上次事件循环运行之后发生了变化，则该值被认为是“脏”值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个过程被称作脏检查（dirty checking）。脏检查是检查数据模型变化的有效手段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在视图中&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过对象的属性而非对象本身来进行引用绑定，是Angular中的最佳实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在AngularJS中，模块是定义应用的最主要方式。模块包含了主要的应用代码。一个应用可&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;以包含多个模块，每一个模块都包含了定义具体功能的代码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用模块能给我们带来许多好处&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 保持全局命名空间的清洁；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;编写测试代码更容易，并能保持其清洁，以便更容易找到互相隔离的功能；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;易于在不同应用间复用代码；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;使应用能够以任意顺序加载代码的各个部分&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS允许我们使用 angular.module() 方法来声明模块，这个方法能够接受两个参数，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;第一个是模块的名称，第二个是依赖列表，也就是可以被注入到模块中的对象列表&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;调用这个方法时如果只传递一个参数，就可以用它来引用模块&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;开发大型应用时，我们会创建多个模块来承载业务逻辑。将复杂的功能分割成不同的模块&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;作用域（scope）① 是构成AngularJS应用的核心基础，在整个框架中都被广泛使用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;应用的作用域是和应用的数据模型相关联的，同时作用域也是表达式执行的上下文&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;作用域是视图和控制器之间的胶水。在应用将视图渲染并呈献给用户之前，视图中的模板会&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;和作用域进行连接，然后应用会对DOM进行设置以便将属性变化通知给AngularJS。这个功能让&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;XHR请求等promise对象的实现变得非常容易&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们可以依赖视图在修改数据时立刻更新 $scope ，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;也可以依赖 $scope 在其发生变化时立刻重新渲染视图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS将 $scope 设计成和DOM类似的结构，因此 $scope 可以进行嵌套，也就是说我们可&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;以引用父级 $scope 中的属性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS启动并生成视图时，会将根 ng-app 元素同 $rootScope 进行绑定。 $rootScope 是所&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;有 $scope 对象的最上层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope 是AngularJS中最接近全局作用域的对象。在 $rootScope 上附加太多业&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;务逻并不是好主意，这与污染JavaScript的全局作用域是一样的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope 对象就是一个普通的JavaScript对象，我们可以在其上随意修改或添加属性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope 对象在AngularJS中充当数据模型，但与传统的数据模型不一样， $scope 并不负责处&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;理和操作数据，它只是视图和HTML之间的桥梁&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope 的所有属性，都可以自动被视图访问到&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们可以在AngularJS应用的模板中使用多种标记，包括下面这些。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;指令：将DOM元素增强为可复用的DOM组件的属性或元素。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;值绑定：模板语法 {{ }} 可以将表达式绑定到视图上。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;过滤器：可以在视图中使用的函数，用来进行格式化。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;表单控件：用来检验用户输入的控件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;作用域有以下的基本功能：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;提供观察者以监视数据模型的变化；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;可以将数据模型的变化通知给整个应用，甚至是系统外的组件；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;可以进行嵌套，隔离业务功能和数据；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;给表达式提供运算时所需的执行环境。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们可以不将变量设置在 $rootScope 上，而是用控制器显式创建一个隔离的子 $scope 对象，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;把它设置到这个子对象上。使用 ng-controller 指令可以将一个控制器对象附加到DOM元素上&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope 对象的生命周期处理有四个不同阶段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;创建&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在创建控制器或指令时，AngularJS会用 $injector 创建一个新的作用域，并在这个新建的控&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;制器或指令运行时将作用域传递进去&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;链接&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当Angular开始运行时，所有的 $scope 对象都会附加或者链接到视图中&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;更新&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当事件循环运行时，它通常执行在顶层 $scope 对象上（被称作 $rootScope ），每个子作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;都执行自己的脏值检测。每个监控函数都会检查变化。如果检测到任意变化， $scope 对象就会触&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;发指定的回调函数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;销毁&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当一个 $scope 在视图中不再需要时，这个作用域将会清理和销毁自己。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;尽管永远不会需要清理作用域（因为Angular会为你处理），但是知道是谁创建了这个作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;还是有用的，因为你可以使用这个 $scope 上叫做 $destory() 的方法来清理这个作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS中的控制器是一个函数，用来向视图的作用域中添加额外的功能。我们用它来给&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;作用域对象设置初始状态，并添加自定义行为。当我们在页面上创建一个新的控制器时，AngularJS会生成并传递一个新的 $scope 给这个控&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;制器。可以在这个控制器里初始化 $scope 。由于AngularJS会负责处理控制器的实例化过程，我&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;们只需编写构造函数即可。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;下面的例子展示了控制器初始化：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function FirstController($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.message = &amp;quot;hello&amp;quot;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们是在全局作用域中创建的这个函数。这样做并不合适，因为会污染&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;全局命名空间。更合理的方式是创建一个模块，然后在模块中创建控制器，如下所示：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var app = angular.module(&amp;#39;app&amp;#39;, []);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;app.controller(&amp;#39;FirstController&amp;#39;, function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.message = &amp;quot;hello&amp;quot;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS同其他JavaScript框架最主要的一个区别就是，控制器并不适合用来执行DOM操&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;作、格式化或数据操作，以及除存储数据模型之外的状态维护操作。它只是视图和 $scope 之间的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;桥梁。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在指令内部创建的作用域被称作孤立作用域。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;除了孤立作用域外，所有的作用域都通过原型继承而来，也就是说它们都可以访问父级作用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;域。如果熟悉面向对象编程，对这个机制应该不会陌生&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;默认情况下，AngularJS在当前作用域中无法找到某个属性时，便会在父级作用域中进行查&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;找。如果AngularJS找不到对应的属性，会顺着父级作用域一直向上寻找，直到抵达 $rootScope&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为止。如果在 $rootScope 中也找不到，程序会继续运行，但视图无法更新。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;设计良好的应用会将复杂的逻辑放到指令和服务中。通过使用指令和服务，我们可以将控制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;器重构成一个轻量且更易维护的形式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;解析 AngularJS 表达式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;尽管AngularJS会在运行 $digest 循环的过程中自动解析表达式，但有时手动解析表达式也是&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;非常有用的,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS通过 $parse 这个内部服务来进行表达式的运算，这个服务能够访问当前所处的作&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;用域。这个过程允许我们访问定义在 $scope 上的原始JavaScript数据和函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;将 $parse 服务注入到控制器中，然后调用它就可以实现手动解析表达式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;例子：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-controller=&amp;quot;MyController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input ng-model=&amp;quot;expr&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;type=&amp;quot;text&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;placeholder=&amp;quot;Enter an expression&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;h2&amp;gt;{{ parseValue }}&amp;lt;/h2&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;quot;myApp&amp;quot;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;MyController&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function($scope,$parse) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.$watch(&amp;#39;expr&amp;#39;, function(newVal, oldVal, scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;if (newVal !== oldVal) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 用该表达式设置parseFun&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var parseFun = $parse(newVal);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 获取经过解析后表达式的值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.parsedValue = parseFun(scope);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;插值字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;要在字符串模板中做插值操作，需要在你的对象中注入 $interpolate 服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-controller=&amp;quot;MyController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input ng-model=&amp;quot;to&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;type=&amp;quot;email&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;placeholder=&amp;quot;Recipient&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;textarea ng-model=&amp;quot;emailBody&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;pre&amp;gt;{{ previewText }}&amp;lt;/pre&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;MyController&amp;#39;, function($scope, $interpolate) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 设置监听&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.$watch(&amp;#39;emailBody&amp;#39;, function(body) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;if (body) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var template = $interpolate(body);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.previewText =&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template({to: $scope.to});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$interpolate 服务返回一个函数，用来在特定的上下文中运算表达式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$interpolate 服务是一个可以接受三个参数的函数，其中第一个参数是必需的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;text （字符串）：一个包含字符插值标记的字符串。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;mustHaveExpression （布尔型）：如果将这个参数设为 true ，当传入的字符串中不含有表&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;达式时会返回 null 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;trustedContext （字符串）：AngularJS会对已经进行过字符插值操作的字符串通过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$sec.getTrusted() 方法进行严格的上下文转义。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;过滤器用来格式化需要展示给用户的数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS有很多实用的内置过滤器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ name | uppercase }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;app.controller(&amp;#39;DemoController&amp;#39;, [&amp;#39;$scope&amp;#39;, &amp;#39;$filter&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function($scope, $filter) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.name = $filter(&amp;#39;lowercase&amp;#39;)(&amp;#39;Ari&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1. currency&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ 123 | currency }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2. date&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;medium&amp;#39; }} &amp;lt;!-- Aug 09, 2013 12:09:02 PM --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;short&amp;#39; }} &amp;lt;!-- 8/9/1312:09PM --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;fullDate&amp;#39; }} &amp;lt;!-- Thursday, August 09, 2013 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;longDate&amp;#39; }} &amp;lt;!-- August 09, 2013 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;mediumDate&amp;#39; }}&amp;lt;!-- Aug 09, 2013 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;shortDate&amp;#39; }} &amp;lt;!-- 8/9/13 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;mediumTime&amp;#39; }}&amp;lt;!-- 12:09:02 PM --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;shortTime&amp;#39; }} &amp;lt;!-- 12:09 PM --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;年份格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;四位年份：{{ today | date:&amp;#39;yyyy&amp;#39; }} &amp;lt;!-- 2013 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;两位年份：{{ today | date:&amp;#39;yy&amp;#39; }} &amp;lt;!-- 13 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一位年份：{{ today | date:&amp;#39;y&amp;#39; }} &amp;lt;!-- 2013 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;月份格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;英文月份：{{ today | date:&amp;#39;MMMM&amp;#39; }} &amp;lt;!-- August --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;英文月份简写：{{ today | date:&amp;#39;MMM&amp;#39; }} &amp;lt;!-- Aug --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数字月份：{{ today |date:&amp;#39;MM&amp;#39; }} &amp;lt;!-- 08 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一年中的第几个月份：{{ today |date:&amp;#39;M&amp;#39; }} &amp;lt;!-- 8 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;日期格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数字日期：{{ today|date:&amp;#39;dd&amp;#39; }} &amp;lt;!-- 09 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一个月中的第几天：{{ today | date:&amp;#39;d&amp;#39; }} &amp;lt;!-- 9 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;英文星期：{{ today | date:&amp;#39;EEEE&amp;#39; }} &amp;lt;!-- Thursday --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;英文星期简写：{{ today | date:&amp;#39;EEE&amp;#39; }} &amp;lt;!-- Thu --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;小时格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;24小时制数字小时：{{today|date:&amp;#39;HH&amp;#39;}} &amp;lt;!--00--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一天中的第几个小时：{{today|date:&amp;#39;H&amp;#39;}} &amp;lt;!--0--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;12小时制数字小时：{{today|date:&amp;#39;hh&amp;#39;}} &amp;lt;!--12--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;上午或下午的第几个小时：{{today|date:&amp;#39;h&amp;#39;}} &amp;lt;!--12--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;分钟格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数字分钟数：{{ today | date:&amp;#39;mm&amp;#39; }} &amp;lt;!-- 09 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一个小时中的第几分钟：{{ today | date:&amp;#39;m&amp;#39; }} &amp;lt;!-- 9 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;秒数格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数字秒数：{{ today | date:&amp;#39;ss&amp;#39; }} &amp;lt;!-- 02 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一分钟内的第几秒：{{ today | date:&amp;#39;s&amp;#39; }} &amp;lt;!-- 2 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;毫秒数：{{ today | date:&amp;#39;.sss&amp;#39; }} &amp;lt;!-- .995 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;字符格式化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;上下午标识：{{ today | date:&amp;#39;a&amp;#39; }} &amp;lt;!-- AM --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;四位时区标识：{{ today | date:&amp;#39;Z&amp;#39; }} &amp;lt;!--- 0700 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;下面是一些自定义日期格式的示例：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;MMMd, y&amp;#39; }} &amp;lt;!-- Aug9, 2013 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;EEEE, d, M&amp;#39; }} &amp;lt;!-- Thursday, 9, 8--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ today | date:&amp;#39;hh:mm:ss.sss&amp;#39; }} &amp;lt;!-- 12:09:02.995 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3. filter &amp;nbsp;过滤器可以从给定数组中选择一个子集，并将其生成一个新数组返回&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在做客户端搜索时，可以从一个数组中立刻过滤出所需&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;的结果&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个过滤器的第一个参数可以是字符串、对象或是一个用来从数组中选择元素的函数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;返回所有包含这个字符串的元素。如果我们想返回不包含该字符串的元素，在参数前加 !&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;符号。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ [&amp;#39;Ari&amp;#39;,&amp;#39;Lerner&amp;#39;,&amp;#39;Likes&amp;#39;,&amp;#39;To&amp;#39;,&amp;#39;Eat&amp;#39;,&amp;#39;Pizza&amp;#39;] | filter:&amp;#39;e&amp;#39; }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- [&amp;quot;Lerner&amp;quot;,&amp;quot;Likes&amp;quot;,&amp;quot;Eat&amp;quot;] --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS会将待过滤对象的属性同这个对象中的同名属性进行比较，如果属性值是字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;就会判断是否包含该字符串。如果我们希望对全部属性都进行对比，可以将 $ 当作键名。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ [{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Ari&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;City&amp;#39;: &amp;#39;San Francisco&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;favorite food&amp;#39;: &amp;#39;Pizza&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Nate&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;City&amp;#39;: &amp;#39;San Francisco&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;favorite food&amp;#39;: &amp;#39;indian food&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}] | filter:{&amp;#39;favorite food&amp;#39;: &amp;#39;Pizza&amp;#39;} }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- [{&amp;quot;name&amp;quot;:&amp;quot;Ari&amp;quot;,&amp;quot;City&amp;quot;:&amp;quot;SanFrancisco&amp;quot;,&amp;quot;favoritefood&amp;quot;:&amp;quot;Pizza&amp;quot;}] --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对每个元素都执行这个函数，返回非假值的元素会出现在新的数组中并返回。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ [&amp;#39;Ari&amp;#39;,&amp;#39;likes&amp;#39;,&amp;#39;to&amp;#39;,&amp;#39;travel&amp;#39;] | filter:isCapitalized }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- [&amp;quot;Ari&amp;quot;] --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.isCapitalized = function(str) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return str[0] == str[0].toUpperCase();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们也可以给 filter 过滤器传入第二个参数，用来指定预期值同实际值进行比较的方式。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;第二个参数可以是以下三种情况之一。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;true&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;用 angular.equals(expected, actual) 对两个值进行严格比较。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;false&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;进行区分大小写的子字符串比较。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;运行这个函数，如果返回真值就接受这个元素。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;4.json 过滤器可以将一个JSON或JavaScript对象转换成字符串。这种转换对调试非常有帮助&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;5.limitTo 过滤器会根据传入的参数生成一个新的数组或字符串，新的数组或字符串的长度取&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;决于传入的参数，通过传入参数的正负值来控制从前面还是从后面开始截取。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ San Francisco is very cloudy | limitTo:3 }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- San --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ San Francisco is very cloudy | limitTo:-6 }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- cloudy --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对数组也可以进行同样的操作。返回数组的第一个元素：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ [&amp;#39;a&amp;#39;,&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;,&amp;#39;d&amp;#39;,&amp;#39;e&amp;#39;,&amp;#39;f&amp;#39;] | limitTo:1 }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- [&amp;quot;a&amp;quot;] --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;6.lowercase小写&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ &amp;quot;San Francisco is very cloudy&amp;quot; | lowercase }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- san francisco is very cloudy --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;uppercase大写&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7.number 过滤器将数字格式化成文本。它的第二个参数是可选的，用来控制小数点后截取的位数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果传入了一个非数字字符，会返会空字符串。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ 123456789 | number }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- 1,234,567,890 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;8. &amp;nbsp;orderBy&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;orderBy 过滤器可以用表达式对指定的数组进行排序。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;orderBy 可以接受两个参数，第一个是必需的，第二个是可选的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;第一个参数是用来确定数组排序方向的谓词&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当第一个参数是函数时，该函数会被当作待排序对象的getter方法。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对这个字符串进行解析的结果将决定数组元素的排序方向。我们可以传入 + 或 - 来强制进行升&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;序或降序排列。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;数组&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在排序表达式中使用数组元素作为谓词。对于与表达式结果并不严格相等的每个元素，则使&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;用第一个谓词。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;第二个参数用来控制排序的方向（是否逆向）。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ [{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Ari&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;status&amp;#39;: &amp;#39;awake&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Q&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;status&amp;#39;: &amp;#39;sleeping&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Nate&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;status&amp;#39;: &amp;#39;awake&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}] | orderBy:&amp;#39;name&amp;#39; }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;[&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{&amp;quot;name&amp;quot;:&amp;quot;Ari&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;awake&amp;quot;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{&amp;quot;name&amp;quot;:&amp;quot;Nate&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;awake&amp;quot;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{&amp;quot;name&amp;quot;:&amp;quot;Q&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;sleeping&amp;quot;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;也可以对排序结果进行反转。例如，通过将第二个参数设置为 true 可以将排序结果进行反转：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ [{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Ari&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;status&amp;#39;: &amp;#39;awake&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Q&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;status&amp;#39;: &amp;#39;sleeping&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;name&amp;#39;: &amp;#39;Nate&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;status&amp;#39;: &amp;#39;awake&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}] | orderBy:&amp;#39;name&amp;#39;: true }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;[&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{&amp;quot;name&amp;quot;:&amp;quot;Q&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;sleeping&amp;quot;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{&amp;quot;name&amp;quot;:&amp;quot;Nate&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;awake&amp;quot;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{&amp;quot;name&amp;quot;:&amp;quot;Ari&amp;quot;,&amp;quot;status&amp;quot;:&amp;quot;awake&amp;quot;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;自定义过滤器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;首先，创建一个模块用以在应用中进行引用（这是一个非常好的实践）：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp.filters&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.filter(&amp;#39;capitalize&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return function(input) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// input是我们传入的字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;if (input) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return input[0].toUpperCase() + input.slice(1);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;过滤器本质上是一个会把我们输入的内容当作参数传入进去的函数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;现在，如果想将一个句子的首字母转换成大写形式，可以用过滤器先将整个句子都转换成小&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;写，再把首字母转换成大写：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- Ginger loves dog treats --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ &amp;#39;ginger loves dog treats&amp;#39; | lowercase | capitalize }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;（注意，可以使用下面的格式访问这些属性。）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;formName.inputFieldName.property&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;未修改的表单&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这是一个布尔属性，用来判断用户是否修改了表单。如果未修改，值为 true ，如果修改过值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为 false ：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;formName.inputFieldName.$pristine&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;修改过的表单&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;只要用户修改过表单，无论输入是否通过验证，该值都返回 true ：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;formName.inputFieldName.$dirty&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;合法的表单&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个布尔型的属性用来判断表单的内容是否合法。如果当前表单内容是合法的，下面属性的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;值就是 true ：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;formName.inputFieldName.$valid&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;不合法的表单&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个布尔属性用来判断表单的内容是否不合法。如果当前表单内容是不合法的，下面属性的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;值为 true ：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;formName.inputFieldName.$invalid&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;错误&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这是AngularJS提供的另外一个非常有用的属性： $error 对象。它包含当前表单的所有验证&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;内容，以及它们是否合法的信息。用下面的语法访问这个属性：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;formName.inputfieldName.$error&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果验证失败，这个属性的值为 true ；如果值为 false ，说明输入字段的值通过了验证。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS处理表单时，会根据表单当前的状态添加一些CSS类（例如当前是合法的、未发生&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;变化的，等等），这些CSS类的命名和前面介绍的属性很相似。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.ng-pristine {}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.ng-dirty {}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.ng-valid {}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.ng-invalid {}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;input.ng-invalid {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;border: 1px solid red;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;input.ng-valid {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;border: 1px solid green;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;例子：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;form name=&amp;quot;signup_form&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;novalidate&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-submit=&amp;quot;signupForm()&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-controller=&amp;quot;signupController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;fieldset&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;legend&amp;gt;Signup&amp;lt;/legend&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;large-12 columns&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;Your name&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;placeholder=&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;name=&amp;quot;name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model=&amp;quot;signup.name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-minlength=&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-maxlength=&amp;quot;20&amp;quot; required /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-show=&amp;quot;signup_form.name.$dirty &amp;amp;&amp;amp; signup_form.name.$invalid &amp;amp;&amp;amp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;signup_form.submitted&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;small class=&amp;quot;error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-show=&amp;quot;signup_form.name.$error.required&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Your name is required.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/small&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;small class=&amp;quot;error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-show=&amp;quot;signup_form.name.$error.minlength&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Your name is required to be at least 3 characters&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/small&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;small class=&amp;quot;error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-show=&amp;quot;signup_form.name.$error.maxlength&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Your name cannot be longer than 20 characters&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/small&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;button type=&amp;quot;submit&amp;quot; &amp;gt;Submit&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/form&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当 signup_form.submitted 设置为 true 时，容纳错误信息的 div 才会展示出来。在&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;signupForm 操作中实现这个行为&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;app.controller(&amp;#39;signupController&amp;#39;, function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.submitted = false;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.signupForm = function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;if ($scope.signup_form.$valid) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 正常提交&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;} else {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.signup_form.submitted = true;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在失焦后显示验证信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们需要使用的指令是 ngFocus ，它是这样的：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;app.directive(&amp;#39;ngFocus&amp;#39;, [function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var FOCUS_CLASS = &amp;quot;ng-focused&amp;quot;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;require: &amp;#39;ngModel&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;link: function(scope, element, attrs, ctrl) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ctrl.$focused = false;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;element.bind(&amp;#39;focus&amp;#39;, function(evt) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;element.addClass(FOCUS_CLASS);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope.$apply(function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ctrl.$focused = true;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}).bind(&amp;#39;blur&amp;#39;, function(evt) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;element.removeClass(FOCUS_CLASS);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope.$apply(function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ctrl.$focused = false;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;将 ngFocus 指令添加到 input 元素上就可以使用这个指令，如下所示：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input ng-class=&amp;quot;{error: signup_form.name.$dirty &amp;amp;&amp;amp; signup_form.name.$invalid}&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;type=&amp;quot;text&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;placeholder=&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;name=&amp;quot;name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model=&amp;quot;signup.name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-minlength=&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-maxlength=&amp;quot;20&amp;quot; required ng-focus /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngFocus 指令给表单输入字段的 blur 和 focus 添加了对应的行为，添加了一个名为 ng-focus&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ed 的类，并将 $focused 的值设置为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-show=&amp;quot;signup_form.name.$dirty &amp;amp;&amp;amp; signup_form.name.$invalid &amp;amp;&amp;amp; !signup_form.name.$focused&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;bower install --save angular-messages&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;bower_components/angular-messages/angular-messages.js&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;告诉Angular将 ngMessages 作为应用程序的依赖模块引入&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;ngMessages&amp;#39;]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;form name=&amp;quot;signup_form&amp;quot; novalidate ng-submit=&amp;quot;signupForm()&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-controller=&amp;quot;signupController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;Your name&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;Name&amp;quot; name=&amp;quot;name&amp;quot; ng-model=&amp;quot;signup.name&amp;quot; ng-minlength=&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3 ng-maxlength=20 required /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;error&amp;quot; ng-messages=&amp;quot;signup_form.name.$error&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;required&amp;quot;&amp;gt;Make sure you enter your name&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;minlength&amp;quot;&amp;gt;Your name must be at least 3 characters&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;maxlength&amp;quot;&amp;gt;Your name cannot be longer than 20 characters&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Submit&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;error&amp;quot; ng-messages=&amp;quot;signup_form.name.$error&amp;quot; ng-messages-multiple&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;required&amp;quot;&amp;gt; sure you enter your name&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;minlength&amp;quot;&amp;gt;Your name must be at least 3 characters&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;maxlength&amp;quot;&amp;gt;Your name cannot be longer than 20 characters&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们可以通过在视图中使用 ng-messages-include 属性引入这个模板来改进这个表单：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class+&amp;#39;error&amp;#39; ng-messages=&amp;quot;signup_form.name.$error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-messages-include=&amp;quot;templates/errors.html&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;error&amp;quot; ng-messages=&amp;quot;signup_form.name.$error&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-messages-include=&amp;quot;templates/errors.html&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;创建一个自定义验证器验证用户名在一个注册表单中是否有效&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;form name=&amp;quot;signup_form&amp;quot; novalidate ng-submit=&amp;quot;signupForm()&amp;quot; ng-controller=&amp;quot;signupController&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ensure-unique=&amp;quot;/api/checkUsername.json&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Your name&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;Username&amp;quot; name=&amp;quot;username&amp;quot; ng-model=&amp;quot;signup.username&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-minlength=3 ng-maxlength=20 required /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;error&amp;quot; ng-messages=&amp;quot;signup_form.username.$error&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;required&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Make sure you enter your username&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;checkingAvailability&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Checking...&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-message=&amp;quot;usernameAvailablity&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;The username has already been taken. Please choose another&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Submit&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;app.directive(&amp;#39;ensureUnique&amp;#39;, function($http) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;require: &amp;#39;ngModel&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;link: function(scope, ele, attrs, ctrl) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var url = attrs.ensureUnique;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ctrl.$parsers.push(function(val) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;if (!val || val.length === 0) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel.$setValidity(&amp;#39;checkingAvailability&amp;#39;, true);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel.$setValidity(&amp;#39;usernameAvailablity&amp;#39;, false);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;method: &amp;#39;GET&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;url: url,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;params: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;username: val&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}).success(function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.$setValidity(&amp;#39;checkingAvailability&amp;#39;, false);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.$setValidity(&amp;#39;usernameAvailablity&amp;#39;, true);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})[&amp;#39;catch&amp;#39;](function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.$setValidity(&amp;#39;checkingAvailability&amp;#39;, false);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.$setValidity(&amp;#39;usernameAvailablity&amp;#39;, false);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return val;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过AngularJS模块API中的 .directive() 方法，我们可以通过传入一个字符串和一个函数来&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;注册一个新指令, 其中字符串是这个指令的名字，指令名应该是驼峰命名风格的，函数应该返回&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一个对象。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;directive() 方法返回的对象中包含了用来定义和配置指令所需的方法和属性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;E&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace: true,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;a href=&amp;quot;http://google.com&amp;quot;&amp;gt;Click me to go to Google&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace 方法会用自定义元素取代指令声明，而不是嵌套在其内部&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为了让AngularJS能够调用我们的指令，需要修改指令定义中的 restrict 设置。这个设置告&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;诉AngularJS在编译HTML时用哪种声明格式来匹配指令定义。我们可以指定一个或多个格式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;之前创建的指令中可以指定以元素（E）、属性（A）、类（C）或注释（M）的格式来&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;调用指令：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;无论有多少种方式可以声明指令，我们坚持使用属性方式，因为它有比较好的跨浏览器兼容性：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为了更加明确我们的意图，将 restrict 设置为字母A（代表attribute)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果你正在使用IE浏览器，打开这个在线示例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;① 。会发现尽管指令声明了两次，但只出现了&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一个链接。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;从技术上讲，可以通过在文档头部声明新的标签（查看第30章）来解决这个问题，但这样做&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;的后果就是，当疏忽了一致性时会导致额外的问题。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;因此，好的经验法则就是始终用属性来声明指令（就像我们之前做的那样），这样会给以后&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;带来方便。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;值得注意的一个例外是，扩展内置HTML标签，例如用AngularJS重载 &amp;lt;a&amp;gt; 、 &amp;lt;form&amp;gt; 和 &amp;lt;input&amp;gt; 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这些场景不会导致浏览器的兼容性问题，因为它们本身就是浏览器所支持的标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;表达式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;h1 ng-init=&amp;quot;greeting=&amp;#39;HelloWorld&amp;#39;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;The greeting is: {{ greeting }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们将表达式 greeting = &amp;#39;Hello World&amp;#39; 赋值给内置指令 ng-init 。在表达式中，我们将&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;greeting 属性的值设置为 Hello World ，然后计算花括号内的 {{ greeting }} 这个表达式的值。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;用表达式来声明指令&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;my-directive=&amp;quot;someExpression&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/my-directive&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive=&amp;quot;someExpression&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;my-directive:someExpression&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;赋值给指令的表达式会在哪个环境中运行?&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当前作用域介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;首先快速了解一下由DOM通过内置指令 ng-controller 提供的作用域。这个指令的作用是在&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;DOM中创建一个新的子作用域：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;还有其他内置指令（比如 ng-include 和 ng-view ）也会创建新的子作用域，这意味着&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;它们在被调用时行为和 ng-controller 类似。我们在构造自定义指令时也可以创建新的子作用域。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;向指令中传递数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS允许通过创建新的子作用域或者隔离作用域来解决这个常见问题&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;同之前在当前作用域介绍中介绍的继承作用域（子作用域）不同，隔离作用域同当&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;前DOM的作用域是完全分隔开的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;some-property=&amp;quot;someProperty with @ binding&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;someProperty: &amp;#39;@&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们在作用域对象内部把 someProperty 值设置为 @ 这个绑定策略。这个绑定策略告诉&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS将DOM中 some-property 属性的值复制给新作用域对象中的 someProperty 属性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;注意，默认情况下 someProperty 在DOM中的映射是 some-property 属性。如果我们想显式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;指定绑定的属性名，可以用如下方式：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;someProperty: &amp;#39;@someAttr&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在这个例子中，被绑定的属性名是 some-attr 而不是 some-property 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;my-url=&amp;quot;http://google.com&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;my-link-text=&amp;quot;Click me to go to Google&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace: true,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;myUrl: &amp;#39;@&amp;#39;, //绑定策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;myLinkText: &amp;#39;@&amp;#39; //绑定策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;a href=&amp;quot;{{myUrl}}&amp;quot;&amp;gt;&amp;#39; +&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;{{myLinkText}}&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;更进一步，还可以在DOM对应的作用域上运算表达式，并将结果传递给指令，在指令内部&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;最终被绑定在属性上：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;some-attr=&amp;quot;{{ &amp;#39;http://&amp;#39; + &amp;#39;google.com&amp;#39; }}&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;给两个方向的绑定都添加一个文本输入字段。通过这两个输入字段可以方便&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;地观察作用域是如何在DOM中通过原型继承链接在一起的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;Their URL field:&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; ng-model=&amp;quot;theirUrl&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;some-attr=&amp;quot;theirUrl&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;my-link-text=&amp;quot;Click me to go to Google&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace: true,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;myUrl: &amp;#39;=someAttr&amp;#39;, // 经过了修改&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;myLinkText: &amp;#39;@&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;My Url Field:&amp;lt;/label&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model=&amp;quot;myUrl&amp;quot; /&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;a href=&amp;quot;{{myUrl}}&amp;quot;&amp;gt;{{myLinkText}}&amp;lt;/a&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-readonly&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; ng-model=&amp;quot;someProperty&amp;quot;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-readonly=&amp;quot;someProperty&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;value=&amp;quot;Some text here&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-checked&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;someProperty = {{someProperty}}&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-checked=&amp;quot;someProperty&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-init=&amp;quot;someProperty = true&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model=&amp;quot;someProperty&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-selected&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;label&amp;gt;Select Two Fish:&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model=&amp;quot;isTwoFish&amp;quot;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;select&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;option&amp;gt;One Fish&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;option ng-selected=&amp;quot;isTwoFish&amp;quot;&amp;gt;Two Fish&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/select&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-href 和 ng-src 都能有效帮助重构和避免错误，因此在改进代码时强烈建议用它们代替原&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;来的 href 和 src 属性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当使用当前作用域中的属性动态创建URL时，应该用 ng-href 代替 href&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这里的潜在问题是当用户点击一个由插值动态生成的链接时，如果插值尚未生效，将会跳转&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;到错误的页面（通常是404）。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这时，如果使用 ng-href ，AngularJS会等到插值生效（在例子中是两秒以后）后再执行点击&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;链接的行为：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- 当 href 包含一个 {{expression}}时总是使用 ng-href --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;a ng-href=&amp;quot;{{ myHref }}&amp;quot;&amp;gt;I&amp;#39;m feeling lucky, when I load&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;!-- 用户单击之前，href不会加载 --&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;a href=&amp;quot;{{ myHref }}&amp;quot;&amp;gt;I&amp;#39;m feeling 404&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;将插值生效的事件延迟两秒，来观察实际的行为：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.run(function($rootScope, $timeout) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$timeout(function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.myHref = &amp;#39;http://google.com&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}, 2000);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS会告诉浏览器在 ng-src 对应的表达式生效之前不要加载图像：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;h1&amp;gt;WrongWay&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;img src=&amp;quot;{{imgSrc}}&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;h1&amp;gt;Rightway&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;img ng-src=&amp;quot;{{imgSrc}}&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.run(function($rootScope, $timeout) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$timeout(function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.imgSrc = &amp;#39;https://www.google.com/images/srpr/logo11w.png&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}, 2000);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在指令中使用子作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-app 和 ng-controller 是特殊的指令，因为它们会修改嵌套在它们内部的指令的作用域。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-app 为AngularJS应用创建 $rootScope ， ng-controller 则会以 $rootScope 或另外一个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-controller 的作用域为原型创建新的子作用域。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope 是作用域链的起始点，任何嵌套在 ng-app 内的指令都会继承它&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在JavaScript代码中通过 run 方法来访问 $rootScope&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.run(function($rootScope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.someProperty = &amp;#39;hello computer&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.someAction = function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.someProperty = &amp;#39;hello human&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;可以在整个文档中只使用一次 ng-app 。如果需要在一个页面中放置多个AngularJS应用，需&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;要手动引导应用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;内置指令 ng-controller 的作用是为嵌套在其中的指令创建一个子作用域，避免将所有操作&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;和模型都定义在 $rootScope 上。用这个指令可以在一个DOM元素上放置控制器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-controller 接受一个参数 expression&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;子 $scope 只是一个JavaScript对象，其中含有从父级 $scope 中通过原型继承得到的方法和属&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;性，包括应用的 $rootScope 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope 对象的职责是承载DOM中指令所共享的操作和模型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;操作指的是 $scope 上的标准JavaScript方法。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;模型指的是 $scope 上保存的包含瞬时状态数据的JavaScript对象。持久化状态的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数据应该保存到服务中，服务的作用是处理模型的持久化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果将模型对象的某个属性设置为字符串，它会通过引用进行共享，因此在子 $scope 中修改&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;属性也会修改父 $scope 中的这个属性。下面的例子展示了正确的做法：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-controller=&amp;quot;SomeController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ someModel.someValue }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;button ng-click=&amp;quot;someAction()&amp;quot;&amp;gt;Communicate to child&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-controller=&amp;quot;ChildController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ someModel.someValue }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;button ng-click=&amp;quot;childAction()&amp;quot;&amp;gt;Communicate to parent&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;SomeController&amp;#39;, function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 最佳实践，永远使用一个模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.someModel = {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;someValue: &amp;#39;hello computer&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.someAction = function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.someModel.someValue = &amp;#39;hello human, from parent&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;ChildController&amp;#39;, function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.childAction = function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.someModel.someValue = &amp;#39;hello human, from child&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;要记住，使用 ng-include 时AngularJS会自动创建一个子作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-switch&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; ng-model=&amp;quot;person.name&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-switch on=&amp;quot;person.name&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;p ng-switch-default&amp;gt;And the winner is&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;h1 ng-switch-when=&amp;quot;Ari&amp;quot;&amp;gt;{{ person.name }}&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-view&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-view 指令用来设置将被路由管理和放置在HTML中的视图的位置&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-if&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用 ng-if 指令可以完全根据表达式的值在DOM中生成或移除一个元素。如果赋值给 ng-if&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;的表达式的值是 false ，那对应的元素将会从DOM中移除，否则对应元素的一个克隆将被重新插&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;入DOM中。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-if 同 no-show 和 ng-hide 指令最本质的区别是，它不是通过CSS显示或隐藏DOM节点，而&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;是真正生成或移除节点。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当一个元素被 ng-if 从DOM中移除，同它关联的作用域也会被销毁&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;而且当它重新加入DOM&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;中时，会通过原型继承从它的父作用域生成一个新的作用域。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-repeat&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;集合中的每个元素&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;都会被赋予自己的模板和作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;同时每个模板实例的作用域中都会暴露一些特殊的属性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;$index ：遍历的进度（0... length-1 ）。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;$first ：当元素是遍历的第一个时值为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;$middle ：当元素处于第一个和最后元素之间时值为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;$last ：当元素是遍历的最后一个时值为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;$even ：当 $index 值是偶数时值为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;$odd ：当 $index 值是奇数时值为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;ul ng-controller=&amp;quot;PeopleController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;li ng-repeat=&amp;quot;person in people&amp;quot; ng-class=&amp;quot;{even: !$even, odd: !$odd}&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{person.name}} lives in {{person.city}}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-init&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-init 最常见的使用场景是：在类似本节的例子中那样，需要创建小的示例代码的时候&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{{ }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;注意，在屏幕可视的区域内使用 {{ }} 会导致页面加载时未渲染的元素发生闪烁，用 ng-bind&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;可以避免这个问题。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-bind&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;HTML加载含有 {{ }} 语法的元素后并不会立刻渲染它们，导致未渲染内容闪烁&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我可以用 ng-bind 将内容同元素绑定在一起避免FOUC&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;除使用 ng-bind 来避免未渲染元素闪烁，还可以在含有 {{ }} 的元素上使用 ng-cloak 指令&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-cloak 指令会将内部元素隐藏，直到路由调用对应的页面时才显示出来。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-bind-template&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;同 ng-bind 指令类似， ng-bind-template 用来在视图中绑定多个表达式。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-bind-template=&amp;quot;{{message}}{{name}}&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;它将当前作用域中运算表达式的值同给定的元素进行绑定。如果属性并不存在，它会隐式创&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;建并将其添加到当前作用域中。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们应该始终用 ngModel 来绑定 $scope 上一个数据模型内的属性，而不是 $scope 上的属性，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这可以避免在作用域或后代作用域中发生属性覆盖。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-show 和 ng-hide 根据所给表达式的值来显示或隐藏HTML元素。当赋值给 ng-show 指令的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;值为 false 时元素会被隐藏。类似地，当赋值给 ng-hide 指令的值为 true 时元素也会被隐藏&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个指令会在表单输入发生变化时计算给定表达式的值。因为要处理表单输入，这个指令要&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;和 ngModel 联合起来使用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-form&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-form 用来在一个表单内部嵌套另一个表单。普通的HTML &amp;nbsp;&amp;lt;form&amp;gt; 标签不允许嵌套，但&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-form 可以。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Angular不会将表单提交到服务器，除非它指定了 action 属性。要指定提交表单时调用哪个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;JavaScript方法，使用下面两个指令中的一个。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;ng-submit ：在表单元素上使用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;ng-click ：在第一个按钮或 submit 类型（ input[type=submit] ）的输入字段上使用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如何通过服务器返回的JSON数据动态生成一个表单&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们用 ng-loop 来遍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;历从服务器取回的所有数据。由于不能动态生成 name 属性，而我们又需要这个属性做验证，所以&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在循环的过程中会为每一个字段都生成一个新表单。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;由于AngularJS中用来取代 &amp;lt;form&amp;gt; 的 ng-form 指令可以嵌套，并且外部表单在所有子表单都合&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;法之前一直处于不合法状态，因此我们可以在动态生成子表单的同时使用表单验证功能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;,[])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;FormController&amp;#39;,function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.fields = [&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{placeholder: &amp;#39;Username&amp;#39;, isRequired: true},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{placeholder: &amp;#39;Password&amp;#39;, isRequired: true},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{placeholder: &amp;#39;Email (optional)&amp;#39;, isRequired: false}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.submitForm = function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;alert(&amp;quot;it works!&amp;quot;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-select&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-select 用来将数据同HTML的 &amp;lt;select&amp;gt; 元素进行绑定。这个指令可以和 ng-model 以及&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-options 指令一同使用，构建精细且表现优良的动态表单&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-options&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;它可以接受一个数组或对象，并对它们进行循环，将内部的内容提供给&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;select 标签内部的选项&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数组作为数据源：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用数组中的值做标签；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用数组中的值作为选中的标签；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用数组中的值做标签组；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用数组中的值作为选中的标签组。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;对象作为数据源：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用对象的键值（key-value）做标签；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用对象的键值作为选中的标签；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用对象的键值作为标签组；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;用对象的键值作为选中的标签组。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-controller=&amp;quot;CityController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;select ng-model=&amp;quot;city&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-options=&amp;quot;city.name for city in cities&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;Choose City&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Best City: {{ city.name }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;,[])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;CityController&amp;#39;,function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.cities = [&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{name: &amp;#39;Seattle&amp;#39;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{name: &amp;#39;San Francisco&amp;#39;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{name: &amp;#39;Chicago&amp;#39;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{name: &amp;#39;New York&amp;#39;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{name: &amp;#39;Boston&amp;#39;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-submit&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-submit 用来将表达式同 onsubmit 事件进行绑定。这个指令同时会阻止默认行为（发送请&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;求并重新加载页面）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;form ng-submit=&amp;quot;submit()&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-controller=&amp;quot;FormController&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Enter text and hit enter:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-model=&amp;quot;person.name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;name=&amp;quot;person.name&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;input type=&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;name=&amp;quot;person.name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;value=&amp;quot;Submit&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;code&amp;gt;people={{people}}&amp;lt;/code&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;ul ng-repeat=&amp;quot;(index, object) in people&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;li&amp;gt;{{ object.name }}&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;,[])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;FormController&amp;#39;,function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.person = {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;name: null&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.people = [];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.submit = function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;if ($scope.person.name) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.people.push({name: $scope.person.name});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.person.name = &amp;#39;&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-class&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用 ng-class 动态设置元素的类，方法是绑定一个代表所有需要添加的类的表达式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;重复的类不会添加。当表达式发生变化，先前添加的类会被移除，新类会被添加&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对于指令，可以把它简单的理解成在特定DOM元素上运行的函数， 指令可以扩展这个元素&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;的功能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;directive() 这个方法是用来定义指令的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function ($timeout, UserDefinedService) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 指令定义放在这里&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;directive() 方法可以接受两个参数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1. &amp;nbsp;name （字符串）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;指令的名字，用来在视图中引用特定的指令。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2. &amp;nbsp;factory_function （函数）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个函数返回一个对象，其中定义了指令的全部行为。 $compile 服务利用这个方法返回的对&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;象，在DOM调用指令时来构造指令的行为。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: String,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;priority: Number,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;terminal: Boolean,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: String or Template Function:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function(tElement, tAttrs) (...},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl: String,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace: Boolean or String,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: Boolean or Object,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;transclude: Boolean,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller: String or&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function(scope, element, attrs, transclude, otherInjectables) { ... },&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controllerAs: String,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;require: String,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;link: function(scope, iElement, iAttrs) { ... },&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;compile: // 返回一个对象或连接函数，如下所示：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function(tElement, tAttrs, transclude) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;pre: function(scope, iElement, iAttrs, controller) { ... },&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;post: function(scope, iElement, iAttrs, controller) { ... }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 或者&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return function postLink(...) { ... }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict 是一个可选的参数。它告诉AngularJS这个指令在DOM中可以何种形式被声明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;默认AngularJS认为 restrict 的值是 A ，即以属性的形式来进行声明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;E（元素）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;my-directive&amp;gt;&amp;lt;/my-directive&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;A（属性，默认值）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive=&amp;quot;expression&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;C（类名）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;my-directive:expression;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;M（注释）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;--directive:my-directive expression--&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;属性是用来声明指令最常用的方式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;terminal 是一个布尔型参数，可以被设置为 true 或 false 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个参数用来告诉AngularJS停止运行当前元素上比本指令优先级低的指令。但同当前指令&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;优先级相同的指令还是会被执行。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果元素上某个指令设置了 terminal 参数并具有较高的优先级，就不要再用其他低优先级的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;指令对其进行修饰了，因为不会被调用。但是具有相同优先级的指令还是会被继续调用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngIf 的优先级略高于 ngView ，如果 ngIf 的表&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;达式值为 true ， ngView 就可以被正常执行，但如果 ngIf 表达式的值为 false ，由于 ngView 的优先&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;级较低就不会被执行&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template 参数是可选的，必须被设置为以下两种形式之一&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;一段HTML文本；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;一个可以接受两个参数的函数，参数为 tElement 和 tAttrs, 并返回一个代表模板的字符&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl （字符串或函数）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl 是可选的参数，可以是以下类型：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;一个代表外部HTML文件路径的字符串；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;一个可以接受两个参数的函数，参数为 tElement 和 tAttrs ，并返回一个外部HTML文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;路径的字符串。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;无论哪种方式，模板的URL都将通过AngularJS内置的安全层，特别是 $getTrusted&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ResourceUrl ，这样可以保护模板不会被不信任的源加载。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在本地开发时，需要在后台运行一个本地服务器，用以从文件系统加载HTML模板，否则&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 会导致Cross Origin Request Script（CORS）错误。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; &amp;nbsp;模板加载是异步的，意味着编译和链接要暂停，等待模板加载完成。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过Ajax异步加载大量的模板将严重拖慢一个客户端应用的速度。为了避免延迟，可以在部&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;署应用之前对HTML模板进行缓存。在大多数场景下缓存都是一个非常好的选择，因为AngularJS&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过减少请求数量提升了性能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;模板加载后，AngularJS会将它默认缓存到 $templateCache 服务中。在实际生产中，可以提&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;前将模板缓存到一个定义模板的JavaScript文件中，这样就不需要通过XHR来加载模板了&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace 是一个可选参数，如果设置了这个参数，值必须为 true ，因为默认值为 false 。默&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;认值意味着模板会被当作子元素插入到调用此指令的元素内部：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div some-directive&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;someDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;div&amp;gt;some stuff here&amp;lt;div&amp;gt;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;调用指令之后的结果如下（这是默认 replace 为 false 时的情况）：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div some-directive&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div&amp;gt;some stuff here&amp;lt;div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果 replace 被设置为了 true ：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;someDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace: true // 修饰过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;div&amp;gt;some stuff here&amp;lt;div&amp;gt;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;指令调用后的结果将是：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div&amp;gt;some stuff here&amp;lt;div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope 参数是可选的，可以被设置为 true 或一个对象。默认值是 false 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当 scope 设置为 true 时，会从父作用域继承并创建一个新的作用域对象。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果一个元素上有多个指令使用了隔离作用域，其中只有一个可以生效。只有指令模板中的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;根元素可以获得一个新的作用域。因此，对于这些对象来说 scope 默认被设置为 true 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;内置指令 ng-controller 的作用，就是从父级作用域继承并创建一个新的子作用域。它会创&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;建一个新的从父作用域继承而来的子作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果要创建一个能够从外部原型继承作用域的指令，将 scope 属性设置为 true ：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: true&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;隔离作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;隔离作用域可能是 scope 属性三个选项中最难理解的一个，但也是最强大的。隔离作用域的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;概念是以面向对象编程为基础的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;具有隔离作用域的指令最主要的使用场景是创建可复用的组件，组件可以在未知上下文中使&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;用，并且可以避免污染所处的外部作用域或不经意地污染内部作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;创建具有隔离作用域的指令需要将 scope 属性设置为一个空对象 {} 。如果这样做了，指令的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;模板就无法访问外部作用域了：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-controller=&amp;#39;MainController&amp;#39;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Outside myDirective: {{ myProperty }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive ng-init=&amp;quot;myProperty = &amp;#39;wow, this is cool&amp;#39;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Inside myDirective: {{ myProperty }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;MainController&amp;#39;, function($scope) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;priority: 100,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;div&amp;gt;Inside myDirective {{ myProperty }}&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用继承作用域的指令的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;例子&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div ng-init=&amp;quot;myProperty=&amp;#39;wow,thisiscool&amp;#39;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Surrounding scope: {{ myProperty }}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-inherit-scope-directive&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div my-directive&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;Inside myDirective, isolate scope: {{ myProperty }}&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;myInheritScopeDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;Inside myDirective, isolate scope: {{ myProperty }}&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: true&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;绑定策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为了让新的指令作用域可以访问当前本地作用域中的变量，需要使用下面三种别名中的一种&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;本地作用域属性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用 @ 符号将本地作用域同DOM属性的值进行绑定。指令内部作用域可以&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用外部作用域的变量：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;@ (or @attr)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;双向绑定&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过 = 可以将本地作用域上的属性同父级作用域上的属性进行双向的数据绑定。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;就像普通的数据绑定一样，本地属性会反映出父数据模型中所发生的改变。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;= (or =attr)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;父级作用域绑定&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过 &amp;amp; 符号可以对父级作用域进行绑定，以便在其中运行函数。意味着对这&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;个值进行设置时会生成一个指向父级作用域的包装函数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;要使调用带有一个参数的父方法，我们需要传递一个对象，这个对象的键是参数的名称，值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;是要传递给参数的内容&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;amp; (or &amp;amp;attr)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngModel: &amp;#39;=&amp;#39;, // 将ngModel同指定对象绑定&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;onSend: &amp;#39;&amp;amp;&amp;#39;, // 将引用传递给这个方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;fromName: &amp;#39;@&amp;#39; // 储存与fromName相关联的字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;transclude 是一个可选的参数。如果设置了，其值必须为 true ，它的默认值是 false&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;嵌入通常用来创建可复用的组件，典型的例子是模态对话框或导航栏&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;只有当你希望创建一个可以包含任意内容的指令时，才使用 transclude: true&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;小例子，创建一个可以被自定义的可复用指令。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div sideboxtitle=&amp;quot;Links&amp;quot;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;li&amp;gt;First link&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;li&amp;gt;Second link&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.directive(&amp;#39;sidebox&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;EA&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;scope: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;title: &amp;#39;@&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;transclude: true,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;div class=&amp;quot;sidebox&amp;quot;&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;h2 class=&amp;quot;header&amp;quot;&amp;gt;{{ title }}&amp;lt;/h2&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;span class=&amp;quot;content&amp;quot; ng-transclude&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/span&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;\\&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;将它从DOM元素中获取的内容放到它发现 ng-transclude&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;指令的地方&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller参数可以是一个字符串，也可以是函数。&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 13px;&quot;&gt;当设置为字符串时，会以字符串的值为名字， 来查找注册在应用中的控制器的构造函数:&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])\n &amp;nbsp; &amp;nbsp; .directive(&amp;#39;myDirective&amp;#39;, &amp;nbsp;function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;, // 始终需要&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller: &amp;#39;SomeController&amp;#39;\n &amp;nbsp; &amp;nbsp; })&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 应用中其他的地方，可以是同一个文件或被index.html包含的另一个文件 angular.module(&amp;#39;myApp&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;SomeController&amp;#39;, function($scope, $element, $attrs, $transclude) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 控制器逻辑放在这里 });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;可以在指令内部通过匿名构造函数的方式来定义一个内联的控制器:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;,[])\n &amp;nbsp; &amp;nbsp; .directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;A&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; controller:\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; function($scope, $element, $attrs, $transclude) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 控制器逻辑放在这里 }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 13px;&quot;&gt;我们想要通过指令来添加一个超链接标签。可以在控制器内的&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 12px;&quot;&gt;$transclude&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 13px;&quot;&gt;函数中实 现，如下所示:&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;)\n &amp;nbsp; &amp;nbsp; .directive(&amp;#39;link&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 255, 255); font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2 3 4 5&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;restrict: &amp;#39;EA&amp;#39;, &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;6 &lt;/span&gt;transclude: true,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function($scope, $element, $transclude, $log) {\n$transclude(function(clone) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 255, 255); font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var a = angular.element(&amp;#39;&amp;lt;a&amp;gt;&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;a.attr(&amp;#39;href&amp;#39;, clone.text());&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;a.text(clone.text()); &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;8 &lt;/span&gt;$log.info(&amp;quot;Created new a tag in link directive&amp;quot;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$element.append(a);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}); }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}; });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果我们希望将当前指令的API暴露给其他指令使用，可以使用controller参数，否则可以 使用link来构造当前指令元素的功能性。如果我们使用了scope.$watch()或者想要与DOM元素 做实时的交互，使用链接会是更好的选择。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controllerAs参数用来设置控制器的别名，可以以此为名来发布控制器，并且作用域可以访 问controllerAs。这样就可以在视图中引用控制器，甚至无需注入$scope&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controllerAs参数用来设置控制器的别名，可以以此为名来发布控制器，并且作用域可以访 问controllerAs。这样就可以在视图中引用控制器，甚至无需注入$scope。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;可以在指令中创建匿名控制器，如下所示:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;)\n &amp;nbsp; &amp;nbsp; .directive(&amp;#39;myDirective&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; restrict: &amp;#39;A&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;template: &amp;#39;&amp;lt;h4&amp;gt;{{ myController.msg }}&amp;lt;/h4&amp;gt;&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; controllerAs: &amp;#39;myController&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; controller: function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;this.msg = &amp;quot;Hello World&amp;quot;\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}; });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;require参数的值可以用下面的前缀进行修饰，这会改变查找控制器时的行为:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;?&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果添加了^前缀，指令会在上游的指令链中查找require参数所指定的控制器。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;?^&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果在当前指令中没有找到所需要的控制器，会将null作为传给link函数的第四个参数。 &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;2 &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;^&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;将前面两个选项的行为组合起来，我们可选择地加载需要的指令并在父指令链中进行查找。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;没有前缀&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果没有前缀，指令将会在自身所提供的控制器中进行查找，如果没有找到任何控制器(或 具有指定名字的指令)就抛出一个错误。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$bower install--save angular -route&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;script src=&amp;quot;js/vendor/angular.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;lt;script src=&amp;quot;js/vendor/angular-route.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;ngRoute&amp;#39;]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ng-view是由ngRoute模块提供的一个特殊指令，它的独特作用是在HTML中给$route对应的视图内容占位。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;它会创建自己的作用域并将模板嵌套在内部。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ngView指令遵循以下规则。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 每次触发$routeChangeSuccess事件，视图都会更新。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 如果某个模板同当前的路由相关联:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 创建一个新的作用域;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 移除上一个视图，同时上一个作用域也会被清除;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 将新的作用域同当前模板关联在一起;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 如果路由中有相关的定义，那么就把对应的控制器同当前作用域关联起来;  触发$viewContentLoaded事件;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 如果提供了onload属性，调用该属性所指定的函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;用config函数在特定的模块或应用中定义路由。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, []). &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;config([&amp;#39;$routeProvider&amp;#39;, function($routeProvider) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 在这里定义路由 }]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, []).\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; config([&amp;#39;$routeProvider&amp;#39;, function($routeProvider) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeProvider\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .when(&amp;#39;/&amp;#39;, {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl: &amp;#39;views/home.html&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller: &amp;#39;HomeController&amp;#39;\n});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}]);\t&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;第一个参数是路由路径，这个路径会与$location.path进行匹配，$location.path也就是 当前URL的路径。如果路径后面还有其他内容，或使用了双斜线也可以正常匹配。我们可以在 URL中存储参数，参数需要以冒号开头(例如:name)，后面会讨论如何用$routeParams读取这 些参数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;第二个参数是配置对象，决定了当第一个参数中的路由能够匹配时具体做些什么。配置对象 中可以进行设置的属性包括controller、template、templateURL、resolve、redirectTo和 reloadOnSearch。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, []).\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; config([&amp;#39;$routeProvider&amp;#39;, function($routeProvider) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeProvider\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .when(&amp;#39;/&amp;#39;, {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl: &amp;#39;views/home.html&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller: &amp;#39;HomeController&amp;#39;\n})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.when(&amp;#39;/login&amp;#39;, {\n &amp;nbsp; &amp;nbsp;templateUrl: &amp;#39;views/login.html&amp;#39;,\n &amp;nbsp; &amp;nbsp;controller: &amp;#39;LoginController&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})\n.when(&amp;#39;/dashboard&amp;#39;, {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl: &amp;#39;views/dashboard.html&amp;#39;,\n &amp;nbsp; &amp;nbsp;controller: &amp;#39;DashboardController&amp;#39;,\n &amp;nbsp; &amp;nbsp;resolve: {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;user: function(SessionService) {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return SessionService.getCurrentUser();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;} }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})\n.otherwise({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;redirectTo: &amp;#39;/&amp;#39;\n});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;resolve&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;resolve: {\n &amp;nbsp; &amp;nbsp;&amp;#39;data&amp;#39;: [&amp;#39;$http&amp;#39;, function($http) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return $http.get(&amp;#39;/api&amp;#39;).then(\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;function success(resp) { return response.data; },\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;function error(reason) { return false; }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;); }];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果设置了resolve属性，AngularJS会将列表中的元素都注入到控制器中。如果这些依赖是 promise对象，它们在控制器加载以及$routeChangeSuccess被触发之前，会被resolve并设置成一 个值。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;列表对象可以是:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 键，键值是会被注入到控制器中的依赖的名字;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 工厂，即可以是一个服务的名字，也可以是一个返回值，它是会被注入到控制器中的函&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数或可以被resolve的promise对象。 在上面的例子中，resolve会发送一个$http请求，并将data的值替换为返回结果的值。列&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;表中的键data会被注入到控制器中，所以在控制器中可以使用它。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;MyApp&amp;#39;, []).\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; config([&amp;#39;$routeProvider&amp;#39;, function($routeProvider) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeProvider\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .when(&amp;#39;/&amp;#39;, {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller: &amp;#39;HomeController&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl: &amp;#39;views/home.html&amp;#39;\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; \t})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.when(&amp;#39;/inbox/:name&amp;#39;, {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; controller: &amp;#39;InboxController&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; templateUrl: &amp;#39;views/inbox.html&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.otherwise({redirectTo: &amp;#39;/&amp;#39;});\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeParams&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;前面提到如果我们在路由参数的前面加上:，AngularJS就会把它解析出来并传递给$routeParams。 例如，如果我们设置下面这样的路由:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeProvider\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .when(&amp;#39;/inbox/:name&amp;#39;, {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller: &amp;#39;InboxController&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;templateUrl: &amp;#39;views/inbox.html&amp;#39;\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS会在$routeParams中添加一个名为name的键，它的值会被设置为加载进来的URL 中的值。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果浏览器加载/inbox/all这个URL，那么$routeParams对象看起来会是下面这样:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;{ name: &amp;#39;all&amp;#39; } 需要注意，如果想要在控制器中访问这些变量，需要把$routeParams注入进控制器:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;app.controller(&amp;#39;InboxController&amp;#39;, function($scope,$routeParams) { // 在这里访问$routeParams&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location &lt;span style=&quot;font-size: 14px; font-family: SimHei, STHeiti;&quot;&gt;服务&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS提供了一个服务用以解析地址栏中的URL，并让你可以访问应用当前路径所对应&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;12.4 $location 服务 103&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location服务对JavaScript中的window.location对象的API进行了更优雅地封装， 并且和AngularJS集成在一起。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当应用需要在内部进行跳转时是使用$location服务的最佳场景，比如当用户注册后、修改 或者登录后进行的跳转。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location服务没有刷新整个页面的能力。如果需要刷新整个页面，需要使用$window. location对象(window.location的一个接口)。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;1. &lt;/span&gt;path() path()用来获取页面当前的路径:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.path(); // 返回当前路径 修改当前路径并跳转到应用中的另一个URL:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.path(&amp;#39;/&amp;#39;); // 把路径修改为&amp;#39;/&amp;#39;路由 path()方法直接和HTML5的历史API进行交互，所以用户可通过点击后退按钮退回到上一个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;页面。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;2. &lt;/span&gt;replace() 如果你希望跳转后用户不能点击后退按钮(对于登录之后的跳转这种发生在某个跳转之后的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;再次跳转很有用)，AngularJS提供了replace()方法来实现这个功能:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.path(&amp;#39;/home&amp;#39;); $location.replace();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 或者 $location.path(&amp;#39;/home&amp;#39;).replace();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;3. &lt;/span&gt;absUrl() absUrl()方法用来获取编码后的完整URL:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.absUrl()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;4. &lt;/span&gt;hash() hash()方法用来获取URL中的hash片段:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.hash(); // 返回当前的hash片段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(64, 64, 64); font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;图灵社区会员 鸟月月(dearzpfree@hotmail.com) 专享 尊重版权&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;104 第 12 章 多重视图和路由&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;5. &lt;/span&gt;host() host()方法用来获取URL中的主机:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.host();// 当前URL的主机&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;6. &lt;/span&gt;port() port()方法用来获取URL中的端口号:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.port();// 当前URL的端口&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;7. &lt;/span&gt;protocol() protocol()方法用来获取URL中的协议:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.protocol();// 当前URL的协议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;8. &lt;/span&gt;search() search()方法用来获取URL中的查询串:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.search();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们可以向这个方法中传入新的查询参数，来修改URL中的查询串部分:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 用对象设置查询&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.search({name: &amp;#39;Ari&amp;#39;, username: &amp;#39;auser&amp;#39;}); // 用字符串设置查询 $location.search(&amp;#39;name=Ari&amp;amp;username=auser&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;search方法可以接受两个参数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; search(可选，字符串或对象)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个参数代表新的查询参数。hash对象的值可以是数组。  paramValue(可选，字符串)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果search参数的类型是字符串，那么paramValue会做为该参数的值覆盖URL当中的对应 值。如果paramValue的值是null，对应的参数会被移除掉。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;9. &lt;/span&gt;url() url()方法用来获取当前页面的URL:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.url(); // 该URL的字符串 如果调用url()方法时传了参数，会设置并修改当前的URL，这会同时修改URL中的路径、&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;查询串和hash，并返回$location。 // 设置新的URL&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location.url(&amp;#39;/home?name=Ari#hashthing&amp;#39;); url()方法可以接受两个参数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; url(可选，字符串) 新的URL的基础的前缀。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;replace(可选，字符串) 想要修改成的路径。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;路由模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;不同的路由模式在浏览器的地址栏中会以不同的URL格式呈现。$location服务默认会使用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;标签模式来进行路由。 路由模式决定你的站点的URL长成什么样子。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;标签模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用标签模式的URL看起来是这样的: http://yoursite.com/#!/inbox/all&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;7 &lt;/span&gt;如果要显式指定配置并使用标签模式，需要在应用模块的config函数中进行配置: &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;ngRoute&amp;#39;])\n &amp;nbsp; &amp;nbsp;.config([&amp;#39;$locationProvider&amp;#39;, function($locationProvider) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;9 &lt;/span&gt;我们还可以配置hashPrefix，也就是标签模式下标签默认的前缀!符号。这个前缀也是 &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$locationProvider.html5Mode(false);\n}]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS在比较老的浏览器中降级机制的一部分。这个符号是可以配置的:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;ngRoute&amp;#39;])\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .config([&amp;#39;$locationProvider&amp;#39;, function($locationProvider) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$locationProvider.html5Mode(false);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$locationProvider.hashPrefix(&amp;#39;!&amp;#39;);\n}]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;HTML5 &lt;/span&gt;&lt;span style=&quot;font-size: 14px; font-family: SimHei, STHeiti;&quot;&gt;模式&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS支持的另外一种路由模式是html5模式。在这个模式中，URL看起来和普通的URL 一样(在老式浏览器中看起来还是使用标签的URL)。例如，同样的路由在HTML5模式中看起来 是这样的:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;http://yoursite.com/inbox/all&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在AngularJS内部，$location服务通过HTML5历史API让应用能够使用普通的URL路径来 路由。当浏览器不支持HTML5历史API时，$location服务会自动使用标签模式的URL作为替代 方案。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location服务还有一个有趣的功能，当一个支持HTML5历史API的现代浏览器加载了一个 带标签的URL时，它会为用户重写这个URL&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在HTML5模式中，AngularJS会负责重写&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;中的链接。也就是说AngularJS会&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;根据浏览器的能力在编译时决定是否要重写href=&amp;quot;&amp;quot;中的链接。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;例如&amp;lt;a href=&amp;quot;/person/42?all=true&amp;quot;&amp;gt;Person&amp;lt;/a&amp;gt;这个标签，在老式浏览器中会被重写成 标签模式的URL:/index.html#!/person/42?all=true。但在现代浏览器中会URL会保持本来 的样子。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;后端服务器也需要支持URL重写，服务器需要确保所有请求都返回index.html，以支持HTML5 模式。这样才能确保由AngularJS应用来处理路由。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当在HTML5模式的AngularJS中写链接时，永远都不要使用相对路径。如果你的应用是在根 路径中加载的，这不会有什么问题，但如果是在其他路径中，AngularJS应用就无法正确处理路 由了。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;另一个选择是在HTML文档的HEAD中用&amp;lt;base&amp;gt;标签来指定应用的基础URL: &amp;lt;base href=&amp;quot;/base/url&amp;quot; /&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;路由事件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;1. &lt;/span&gt;$routeChangeStart&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS在路由变化之前会广播$routeChangeStart事件。在这一步中，路由服务会开始加 载路由变化所需要的所有依赖，并且模板和resolve键中的promise也会被resolve。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .run([&amp;#39;$rootScope&amp;#39;, &amp;#39;$location&amp;#39;, function($rootScope, $location) &amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.$on(&amp;#39;$routeChangeStart&amp;#39;, function(evt, next, current) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}); }]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeChangeStart事件带有两个参数:  将要导航到的下一个URL;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 路由变化前的URL。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;2. &lt;/span&gt;$routeChangeSuccess&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS会在路由的依赖被加载后广播$routeChangeSuccess事件。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .run([&amp;#39;$rootScope&amp;#39;, &amp;#39;$location&amp;#39;, function($rootScope, $location) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.$on(&amp;#39;$routeChangeSuccess&amp;#39;, function(evt, next, previous) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}); }]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeChangeStart事件带有三个参数:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;原始的AngularJS evt对象;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 用户当前所处的路由;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 上一个路由(如果当前是第一个路由，则为undefined)。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3. $routeChangeError AngularJS会在任何一个promise被拒绝或者失败时广播$routeChangeError事件。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])\n &amp;nbsp; &amp;nbsp;.run(function($rootScope, $location) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$rootScope.$on(&amp;#39;$routeChangeError&amp;#39;, function(current, previous, rejection) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}); });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$routeChangeError事件有三个参数:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 当前路由的信息;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 上一个路由的信息;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; 被拒绝的promise的错误信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px; font-family: Arial;&quot;&gt;4. &lt;/span&gt;$routeUpdate AngularJS在reloadOnSearch属性被设置为false的情况下，重新使用某个控制器的实例时，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;会广播$routeUpdate事件。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;页面重新加载&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$location服务不会重新加载整个页面，它只会单纯地改变URL。如果我们想重新加载整个 页面，需要用$window服务来设置地址。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$window.location.href = &amp;quot;/reload/page&amp;quot;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果我们想要在作用域的生命周期外使用$location服务，必须用$apply函数将变化抛到 应用外部。因为$location服务是基于$digest来驱动浏览器的地址变化，以使路由事件正常工 &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;17 &lt;/span&gt;作的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;基于以上原因，AngularJS使用$injetor(注入器服务)来管理依赖关系的查询和实例化。 事实上，$injetor负责实例化AngularJS中所有的组件，包括应用的模块、指令和控制器等。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在运行时，任何模块启动时$injetor都会负责实例化，并将其需要的所有依赖传递进去。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [])\n.factory(&amp;#39;greeter&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;greet: function(msg) {alert(msg);}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;} })&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;MyController&amp;#39;,\n &amp;nbsp; &amp;nbsp;function($scope, greeter) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.sayHello = function() {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;greeter.greet(&amp;quot;Hello!&amp;quot;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当AngularJS实例化这个模块时，会查找greeter并自然而然地把对它的引用传递进去:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过$injector将这些参数注入进对象实例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;请注意，这个过程只适用于未经过压缩和混淆的代码，因为AngularJS需要原始未经压缩的 &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;参数列表来进行解析。 有了这个根据参数名称进行推断的过程，参数顺序就没有什么重要的意义了，因为AngularJS会帮助我们把属性以正确的顺序注入进去。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;显式注入声明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS提供了显式的方法来明确定义一个函数在被调用时需要用到的依赖关系。通过这&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;种方法声明依赖，即使在源代码被压缩、参数名称发生改变的情况下依然能够正常工作。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;可以通过$inject属性来实现显式注入声明的功能。函数对象的$inject属性是一个数组， 数组元素的类型是字符串，它们的值就是需要被注入的服务的名称。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var aControllerFactory =\n &amp;nbsp; &amp;nbsp; function aController($scope, greeter) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;console.log(&amp;quot;LOADED controller&amp;quot;, greeter);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// ......控制器 };&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;aControllerFactory.$inject = [&amp;#39;$scope&amp;#39;, &amp;#39;greeter&amp;#39;]; // Greeter服务 console.log(&amp;quot;greeter service&amp;quot;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 我们应用的控制器 angular.module(&amp;#39;myApp&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;MyController&amp;#39;, aControllerFactory)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.factory(&amp;#39;greeter&amp;#39;, greeterService);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 获取注入器并创建一个新的作用域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var injector = angular.injector([&amp;#39;ng&amp;#39;, &amp;#39;myApp&amp;#39;]),&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller = injector.get(&amp;#39;$controller&amp;#39;),\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rootScope = injector.get(&amp;#39;$rootScope&amp;#39;),\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newScope = rootScope.$new();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 调用控制器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;controller(&amp;#39;MyController&amp;#39;, {$scope: newScope})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对于这种声明方式来讲，参数顺序是非常重要的，因为$inject数组元素的顺序必须和注入 参数的顺序一一对应。这种声明方式可以在压缩后的代码中运行，因为声明的相关信息已经和函 数本身绑定在一起了。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;行内注入声明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;AngularJS提供的注入声明的最后一种方式，是可以随时使用的行内注入声明。这种方式其 实是一个语法糖，它同前面提到的通过$inject属性进行注入声明的原理是完全一样的，但允许 我们在函数定义时从行内将参数传入。此外，它可以避免在定义过程中使用临时变量。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在定义一个AngularJS的对象时，行内声明的方式允许我们直接传入一个参数数组而不是一 个函数。数组的元素是字符串，它们代表的是可以被注入到对象中的依赖的名字，最后一个参数 就是依赖注入的目标函数对象本身&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.controller(&amp;#39;MyController&amp;#39;, [&amp;#39;$scope&amp;#39;, &amp;#39;greeter&amp;#39;, function($scope, greeter) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;由于需要处理的是一个字符串组成的列表，行内注入声明也可以在压缩后的代码中正常运 行。通常通过括号和声明数组的[]符号来使用它。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;服务提供了一种能在应用的整个生命周期内保持数据的方法，它能够在控制器之间进行通 信，并且能保证数据的一致性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;服务是一个单例对象，在每个应用中只会被实例化一次(被$injector实例化)，并且是延迟 加载的(需要时才会被创建)。服务提供了把与特定功能相关联的方法集中在一起的接口。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;以AngularJS的$http服务为例，它提供了对浏览器的XMLHttpRequest对象的底层访问功能， 我们可以通过$http的API同XMLHttpRequest进行交互，而不需要因为调用这些底层代码而污染 应用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;注册一个服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用angular.module的factory API创建服务，是最常见也是最灵活的方式:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp.services&amp;#39;, [])\n.factory(&amp;#39;githubService&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var serviceInstance = {}; // 我们的第一个服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return serviceInstance；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;同创建控制器的方法一样，服务的工厂函数既可以是一个函数也可以是一个数组:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 用方括号声明工厂 angular.module(&amp;#39;myApp.services&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.factory(&amp;#39;githubService&amp;#39;, [function($http) { }]); 例如，githubService需要访问$http服务，所以我们将$http服务当作AngularJS应用的一个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;依赖，并将它注入到工厂函数中。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp.services&amp;#39;, [])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.factory(&amp;#39;githubService&amp;#39;, function($http) { &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 我们的serviceInstance现在可以在函数定义中访问$http服务 var serviceInstance = {};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return serviceInstance;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;现在，无论何处需要访问GitHub API都不需要通过$http来进行了，可以通过githubService&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;来代替，并让它处理所有复杂的业务逻辑和远程服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过将方法设置为服务对象的一个属性来将其暴露给外部。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp.services&amp;#39;, [])\n &amp;nbsp; &amp;nbsp; .factory(&amp;#39;githubService&amp;#39;, function($http) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var githubUrl = &amp;#39;https://api.github.com&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var runUserRequest = function(username, path) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 从使用JSONP调用Github API的$http服务中返回promise return $http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;method: &amp;#39;JSONP&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; url: githubUrl + &amp;#39;/users/&amp;#39; +&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;username + &amp;#39;/&amp;#39; +\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; path + &amp;#39;?callback=JSON_CALLBACK&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}); };&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 返回带有一个events函数的服务对象 return {&lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;events: function(username) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return runUserRequest(username, &amp;#39;events&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;将服务的名字当作参数传递给控制器函数，可以将服务注入到控制器中。当服务成为了某个 控制器的依赖，就可以在控制器中调用任何定义在这个服务对象上的方法。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;myApp.services&amp;#39;]) .controller(&amp;#39;ServiceController&amp;#39;, function($scope, githubService) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 我们可以调用对象的事件函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.events = githubService.events(&amp;#39;auser&amp;#39;);\n &amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;githubService服务已经被注入到ServiceController中，可以像使用任何其他服务一样使 用它。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为了在控制器之间共享数据，需要在服务中添加一个用来储存用户名的方法。记住，服务在&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;应用的生命周期内是单例模式的，因此可以将用户名安全地储存在其中。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp.services&amp;#39;, [])\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .factory(&amp;#39;githubService&amp;#39;, function($http) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var githubUrl = &amp;#39;https://api.github.com&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; githubUsername;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var runUserRequest = function(path) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 从使用JSONP的Github API的$http服务中返回promise return $http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;method: &amp;#39;JSONP&amp;#39;,\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; url: githubUrl + &amp;#39;/users/&amp;#39; +&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;githubUsername + &amp;#39;/&amp;#39; +\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; path + &amp;#39;?callback=JSON_CALLBACK&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}); };&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 返回带有两个方法的服务对象 // 事件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// 和setUsername&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;events: function() {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return runUserRequest(&amp;#39;events&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;},\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setUsername: function(username) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;githubUsername = username;\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}; });&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;现在，服务中有一个setUsername方法，用来保存当前的GitHub用户名了。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;githubService可以注入到应用的任何一个控制器中，并可以在控制器中调用events()方&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;法，且无须担心当前作用域对象上的用户名是否是正确的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;myApp.services&amp;#39;])\n &amp;nbsp; &amp;nbsp; .controller(&amp;#39;ServiceController&amp;#39;,\n &amp;nbsp; &amp;nbsp; function($scope, githubService) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.setUsername =\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; githubService.setUsername;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;factory()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如前所见，factory()方法是创建和配置服务的最快捷方式。factory()函数可以接受两个参数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; name(字符串) 需要注册的服务名。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt; getFn(函数) 这个函数会在AngularJS创建服务实例时被调用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;)\n.factory(&amp;#39;myService&amp;#39;, function() {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}; });&lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return { &lt;span style=&quot;font-size: 14px; font-family: Arial; color: rgb(255, 255, 255);&quot;&gt;5 &lt;/span&gt;&amp;#39;username&amp;#39;: &amp;#39;auser&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;因为服务是单例对象，getFn在应用的生命周期内只会被调用一次。同其他AngularJS的服务 一样，在定义服务时，getFn可以接受一个包含可被注入对象的数组或函数。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;getFn函数可以返回简单类型、函数乃至对象等任意类型的数据(同value()函数类似)。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;myApp&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.factory(&amp;#39;githubService&amp;#39;, [&amp;#39;$http&amp;#39;, function($http) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;return {\n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;getUserEvents: function(username) {&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;// ... }&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}; }]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-weight: bold; font-style: italic; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一，Angular后台工作~：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1.在标准的浏览器中，我们说当一个事件被触发的时候，执行一个回调函数，&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在这个过程中，&amp;nbsp;javaScript创建出一个事件对象，并执行这个对象监听的事件。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;而在这个整个的流程当中，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们加入Angular，&amp;nbsp;Angular会扩展这个流程，创建一个Angular上下文，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;那什么是上下文？指的是在Angular事件循环内的特定代码，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;而所谓的$digest循环指的就是Angular事件循环。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.$digest循环&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.1).包含$watch/$evalAsyc&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.2).为了更新视图，追踪变化，使用$watch&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.3).脏检查：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;页面上一个input[type=text]输入框，当我们输入的时候，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;就会进入$digest循环，去跟旧值进行一个比较，一旦返现是新的东东，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dirty会设为true,接着会再次进入$digest循环，进行再一次的检查比较，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;发现没有更新的东东了，则进行重绘。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.4).不要在controller中写$watch，可以移到服务里去&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.5).$apply:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这是一个函数，这个函数做了什么工作，起到什么作用？它可以让一个表达式，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;原本在Angular框架外部执行的，生生拿到Angular上下文内部进行执行。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;其实我们的指令ng-x，我们的$timeout，使用的时候，都会调用了$apply().&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;我们说当我们使用第三方的库，希望事件运行在我们Angular上下文内部的时候，必须使用这个方法，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;不然的话，Angular是察觉不到它外部发生的事件的。&amp;nbsp;不建议在controller里使用这个方法，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;可以移到指令去，譬如：&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app.directive(&amp;#39;new&amp;#39;,&amp;nbsp;function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;function(scope,&amp;nbsp;ele,&amp;nbsp;attrs,&amp;nbsp;ctrl){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$(ele).click(function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.$apply(function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//code...&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.6).启动应用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当浏览器触发DOMContentLoaded事件，Angular开始工作，首先会去寻找ng-app指令，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果找到，则自动启动应用，否则可以通过手动启动应用，写法如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;e&amp;nbsp;=&amp;nbsp;document.querySelector(&amp;#39;body&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.bootstrap(e,&amp;nbsp;[&amp;#39;app&amp;#39;]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.7).ui-utils&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这是一个功能强大的工具包&amp;nbsp;安装：bower&amp;nbsp;install&amp;nbsp;--save&amp;nbsp;angular-ui-utils&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ui-utils里面的每一个组件都是一个独立模块，需要单独引入。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1.ui-event.js，&amp;nbsp;angular.module(&amp;#39;app&amp;#39;,[&amp;#39;ui.event&amp;#39;]);&amp;nbsp;&amp;nbsp;&amp;nbsp;比较特殊的事件，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular自身不支持的话，&amp;nbsp;可以用这个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.最有用的应该就是ui-router,&amp;nbsp;resolve，是一个对象，路由在渲染之前，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;解析promise到控制器中的依赖中去，&amp;nbsp;直接上例子：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$stateProvider.state(&amp;#39;home&amp;#39;,{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resolve&amp;nbsp;:&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;person&amp;nbsp;:&amp;nbsp;function(){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name&amp;nbsp;：&amp;quot;jack&amp;quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;detail&amp;nbsp;:&amp;nbsp;function($http){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method&amp;nbsp;:&amp;nbsp;&amp;quot;jsonp&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;x.json&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;嵌套路由：&amp;nbsp;&amp;nbsp;/index/1&amp;nbsp;匹配第一个状态&amp;nbsp;&amp;nbsp;&amp;nbsp;/index/1/inner&amp;nbsp;匹配第二个状态&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$stateProvider&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.state(&amp;#39;index&amp;#39;,{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;/index/:id&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;template&amp;nbsp;:&amp;nbsp;&amp;quot;inner&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;controller&amp;nbsp;:&amp;nbsp;function($scope.&amp;nbsp;$stateParams){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.id&amp;nbsp;=&amp;nbsp;$stateParams.id;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.state(&amp;#39;index.inner&amp;#39;,{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;/inner&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;template&amp;nbsp;:&amp;nbsp;&amp;quot;inner___&amp;quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ui-route事件:&amp;nbsp;当状态发生改变&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.$on(&amp;#39;$stateChangeStart&amp;#39;,function(evt,&amp;nbsp;toState,&amp;nbsp;roParams,&amp;nbsp;fromState,&amp;nbsp;fromParams){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;evt.preventDefault();//阻止来这个状态的完成&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;视图加载事件：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.$on(&amp;#39;$viewContentLoading&amp;#39;,&amp;nbsp;function(event,&amp;nbsp;viewConfig){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.8).$http中的缓存,&amp;nbsp;数据不常改变的，会有用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method&amp;nbsp;:&amp;nbsp;&amp;#39;GET&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;a.json&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cache&amp;nbsp;:&amp;nbsp;true&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;操作这些缓存：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;cache&amp;nbsp;=&amp;nbsp;$cacheFactory(&amp;#39;$http&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;获取上一次请求的缓存：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;lastcache&amp;nbsp;=&amp;nbsp;cache.get(&amp;#39;http://a.json&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;删除：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.remove(&amp;#39;http://a.json&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.9).Angular内置缓存服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;创建一个ID为myCache的缓存对象：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;cache&amp;nbsp;=&amp;nbsp;$cacheFactory(&amp;#39;myCache&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;获取缓存信息：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.info()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;设置缓存：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.put(&amp;#39;name1&amp;#39;,&amp;#39;hello&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;获取键名对应的缓存值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;cache.get(&amp;#39;name1&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;移除&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.remove(&amp;#39;name1&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.removeAll();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.destory();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3.优化$watch函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;避免复杂的逻辑，大量的循环下使用$watch方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;尽量不用这个函数，避免大量使用，避免使用的时候加入第三个参数true(意味着深度比较angular.equals())&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用完，移除$watch：&amp;nbsp;具体如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;unWatch&amp;nbsp;&amp;nbsp;=&amp;nbsp;$scope.$watch(&amp;#39;obj&amp;#39;,function(newObj){&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(&amp;nbsp;obj.way&amp;nbsp;==&amp;nbsp;1&amp;nbsp;){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unWatch()//移除&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1.&amp;nbsp;jqLite是什么？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这是jQuery库的子集，jqLite允许Angular以夸浏览器兼容的方式来维护DOM&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.生产环境下使用的工具---Grunt&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;自动处理任务！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;npm&amp;nbsp;install&amp;nbsp;-g&amp;nbsp;grunt-cli&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;全局安装&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过一个文件来告诉grunt，做什么任务，运行什么：&amp;nbsp;&amp;nbsp;&amp;nbsp;gruntfile.js&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过package.json文件来告诉node,&amp;nbsp;要依赖什么文件，&amp;nbsp;npm&amp;nbsp;init生成&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;执行：&amp;nbsp;npm&amp;nbsp;install&amp;nbsp;grunt&amp;nbsp;--save-dev&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;(提示：&amp;nbsp;--save-dev&amp;nbsp;意味着将grunt作为开发依赖保存)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3.压缩任务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;uglify插件来处理：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;npm&amp;nbsp;install&amp;nbsp;grunt-contrib-uglify&amp;nbsp;--save-dev&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;现在可以去gruntfile文件配置，让grunt知道自己要干什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;module.exports&amp;nbsp;=&amp;nbsp;function(grunt){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grunt.initConfig({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pkg:grunt,file.readJSON(&amp;#39;package.json&amp;#39;),&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;uglify:{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;build:{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;src&amp;nbsp;:&amp;nbsp;&amp;quot;src/a.js&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dest:&amp;quot;build/a.min.js&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grunt.loadNpmTasks(&amp;#39;grunt-contrib-uglify&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;跑起来：&amp;nbsp;grunt&amp;nbsp;uglify&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;4.Yeoman，脚手架工具，构建程序工作空间，快速构建新程序，具体使用方法自行搜索。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;5.性能优化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;每一个可能改变的数据都有一个监控函数，限制不必要的监控的数量，可以提升性能，数据绑定不应该超过2000个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过节流函数，限制每秒钟循环的数量可以很好的提升性能。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;6.优化$watch函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;避免复杂的逻辑，大量的循环下使用$watch方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;尽量不用这个函数，避免大量使用，避免使用的时候加入第三个参数true(意味着深度比较angular.equals())&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用完，移除$watch：&amp;nbsp;具体如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;unWatch&amp;nbsp;&amp;nbsp;=&amp;nbsp;$scope.$watch(&amp;#39;obj&amp;#39;,function(newObj){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(&amp;nbsp;obj.way&amp;nbsp;==&amp;nbsp;1&amp;nbsp;){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unWatch()//移除&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7.bindonce&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这个库的作用是保留监控一次的指令，一旦数据可用，渲染内容，移除监控器。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;具体使用方法在github上有，链接自己找&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;8.angular在ie下是有问题的，需要适配的话，需要额外处理。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在IE下，xhr请求是缓存下来的，我们不要缓存，可以设置Caceh-Control为no-cache&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular.module(&amp;#39;app&amp;#39;).config(function($httpProvider){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$httpProvider.defaults.heads.common[&amp;#39;Cache-Control&amp;#39;]&amp;nbsp;=&amp;nbsp;&amp;#39;no-cache&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;9.Angular内置缓存服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;创建一个ID为myCache的缓存对象：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;cache&amp;nbsp;=&amp;nbsp;$cacheFactory(&amp;#39;myCache&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;获取缓存信息：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.info()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;设置缓存：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.put(&amp;#39;name1&amp;#39;,&amp;#39;hello&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;获取键名对应的缓存值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.get(&amp;#39;name1&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;移除&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.remove(&amp;#39;name1&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.removeAll();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.destory();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;10.$http中的缓存&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;数据不常改变的，会有用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method&amp;nbsp;:&amp;nbsp;&amp;#39;GET&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;#39;a.json&amp;#39;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cache&amp;nbsp;:&amp;nbsp;true&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;操作这些缓存：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;cache&amp;nbsp;=&amp;nbsp;$cacheFactory(&amp;#39;$http&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;获取上一次请求的缓存：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;lastcache&amp;nbsp;=&amp;nbsp;cache.get(&amp;#39;http://a.json&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;删除：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;cache.remove(&amp;#39;http://a.json&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;11.AngularUi库&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;最有用的应该就是ui-router&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;说一个resolve，是一个对象，路由在渲染之前，解析promise到控制器中的依赖中去，&amp;nbsp;直接上例子：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$stateProvider.state(&amp;#39;home&amp;#39;,{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resolve&amp;nbsp;:&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;person&amp;nbsp;:&amp;nbsp;function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name&amp;nbsp;：&amp;quot;jack&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;detail&amp;nbsp;:&amp;nbsp;function($http){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;$http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method&amp;nbsp;:&amp;nbsp;&amp;quot;jsonp&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;x.json&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;嵌套路由：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;/index/1&amp;nbsp;匹配第一个状态&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;/index/1/inner&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;匹配第二个状态&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$stateProvider&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.state(&amp;#39;index&amp;#39;,{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;/index/:id&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;template&amp;nbsp;:&amp;nbsp;&amp;quot;inner&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;controller&amp;nbsp;:&amp;nbsp;function($scope.&amp;nbsp;$stateParams){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.id&amp;nbsp;=&amp;nbsp;$stateParams.id;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.state(&amp;#39;index.inner&amp;#39;,{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;&amp;quot;/inner&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;template&amp;nbsp;:&amp;nbsp;&amp;quot;inner___&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ui-route事件:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当状态发生改变：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.$on(&amp;#39;$stateChangeStart&amp;#39;,function(evt,&amp;nbsp;toState,&amp;nbsp;roParams,&amp;nbsp;fromState,&amp;nbsp;fromParams){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;evt.preventDefault();//阻止来这个状态的完成&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;视图加载事件：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.$on(&amp;#39;$viewContentLoading&amp;#39;,&amp;nbsp;function(event,&amp;nbsp;viewConfig){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.ui-utils&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这是一个功能强大的工具包&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;bower&amp;nbsp;install&amp;nbsp;--save&amp;nbsp;angular-ui-utils&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;ui-utils里面的每一个组件都是一个独立模块，需要单独引入。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在angular-ui-utils/modules/目录下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1）.mask.js&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;关于接收特殊格式的信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular.module(&amp;#39;app&amp;#39;,[&amp;#39;ui.mask&amp;#39;]);&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2).ui-event.js&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular.module(&amp;#39;app&amp;#39;,[&amp;#39;ui.event&amp;#39;]);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;比较特殊的事件，angular自身不支持的话，&amp;nbsp;可以用这个&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3.当浏览器触发DOMContentLoaded事件，Angular就开始工作，首先寻找ng-app指令&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果找到了，会自动启动应用，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果没有找到，可以手动启动应用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;e&amp;nbsp;=&amp;nbsp;document.querySelector(&amp;#39;body&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular.bootstrap(e,[&amp;#39;app&amp;#39;]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果没有找到也没有手动启动，则不会运行&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;4.Angular后台工作&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;标准浏览器中，当事件被触发的时候，浏览器会执行一个回调函数，这个回调函数就是注册给该事件的回调函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在这个过程中，javascript创建来一个事件对象，并且执行这个事件对象所在的监听的事件。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这么一个流程中，我们加入angular，&amp;nbsp;它会扩展这个流程，创建了一个angular上下文，所谓的上下文，指的是&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;运行在Angular事件循环内的特定的代码，而Angular事件循环通常被称作$digest循环&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1）.$digest循环&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;包含2部分，&amp;nbsp;$watch&amp;nbsp;和&amp;nbsp;$evalAsync&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;为了更新视图，Angular需要追踪变化，使用$watch添加监控函数做到这一点，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;脏值检查：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;页面上input元素输入，会进入$digest循环，跟旧值比较，发现有更新，则dirty为true,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这时需要再次进入$digest循环，发现已经没有更新了，那好，DOM重绘。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;永远不要再控制器里使用$watch,会导致控制器难测试，应该移到相应的服务中。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2）.$apply&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$apply()函数，&amp;nbsp;从Angular框架外部，让表达式在angular上下文内部执行。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;用settimeout&amp;nbsp;或者第三方库，&amp;nbsp;想让事件运行在angular上下文内部，必须使用$apply()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.$apply(function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.name&amp;nbsp;=&amp;nbsp;&amp;#39;jack&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;总之，$apply()可以从外部进入上下文&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;什么时候使用？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;所有ng-x指令都会调用$apply()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果手动处理事件，使用第三方框架，或者调用setTimeout(),都可以使用$apply使得angualr返回$digest循环&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不要再控制器中使用$apply()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jQuery和Angular集成一起，通常叫肮脏行为&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;需要使用$apply(),不然的话，angular不会知道angular上下文外部的事件，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;指令：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app.directive(&amp;#39;new&amp;#39;,function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;function(scope,&amp;nbsp;ele,&amp;nbsp;attr,&amp;nbsp;ctrl){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.onclick(function(ev){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scope.$apply(function(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//xx&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;5.模块化：&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;模块是Angular应用的核心功能，不同的功能定义不同模块：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;譬如&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular.module(&amp;#39;app&amp;#39;,[&amp;#39;app.home&amp;#39;,&amp;#39;app.login&amp;#39;])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;这样的话，我们可以集中区实现每一个模块的具体功能，划分明确，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果其他地方需要这个模块，完全可以引入这个模块。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;控制器里尽量保持精简，不要什么都写到里面去，会特混乱，可以移到指令去。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;6.服务器通信&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;定一个来处理请求的模块：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;angular&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.module(&amp;#39;app.services&amp;#39;,[])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.factory(&amp;#39;service1&amp;#39;,&amp;nbsp;service1);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;service1.$injector&amp;nbsp;=&amp;nbsp;[&amp;#39;$q&amp;#39;,&amp;#39;$http&amp;#39;];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;function&amp;nbsp;service1($q,&amp;nbsp;$http){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;service&amp;nbsp;&amp;nbsp;=&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count&amp;nbsp;：&amp;nbsp;function（）{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;d&amp;nbsp;=&amp;nbsp;$q.defer();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http.get(&amp;#39;/count&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.success(function(data,&amp;nbsp;status){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d.resolve(data)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.errror(function(data,&amp;nbsp;status){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d.reject(data)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;d.promise;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;allInfo&amp;nbsp;：&amp;nbsp;function（）{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;d&amp;nbsp;=&amp;nbsp;$q.defer();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http.get(&amp;#39;/allInfo&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.success(function(data,&amp;nbsp;status){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d.resolve(data)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.errror(function(data,&amp;nbsp;status){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d.reject(data)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;d.promise;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;service;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;在我们的功能模块中，引入这个服务模块，并在控制器中注入服务、使用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.module(&amp;#39;app.home&amp;#39;,[&amp;#39;ngRoute&amp;#39;,&amp;#39;app.services&amp;#39;])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.controller(&amp;#39;HomeController&amp;#39;,&amp;nbsp;homeController);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;homeController.$injector&amp;nbsp;=&amp;nbsp;[&amp;#39;service1&amp;#39;];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;homeController(service1){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service1&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.count()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.then(function(data){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(data)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service1&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.allInfo()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.then(function(data){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(data)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7.Promise&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;promise是一个异步处理返回值的方式，它是一个对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;常规做法，通过回调来处理，但使用回调很痛苦&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;为了逃脱回调地狱，我们使用promise方式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;它本质是保持来代码异步运行的能力&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;怎么创建一个promise?&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;使用内置的$q服务，首先我们把$q服务注入进来&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;然后创建一个deferred对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;var&amp;nbsp;deferred&amp;nbsp;=&amp;nbsp;$q.defer();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;deferred暴露三个方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*用值来执行deferred&amp;nbsp;promise*/&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;deferred.resolve({name:&amp;quot;jack&amp;quot;});&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*用拒绝执行promise*/&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;无论promise成功还是拒绝，当结果可用的时候，then都会立即异步调用其中的回调函数，&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;而且then()方法总是返回一个新的promise,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;因此可以用链式请求写法。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;如果说我们有多个Promise，我们可以把它们合成一个，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;通过all()方法，这个方法返回一个promise数组&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$q.all()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;defer()方法是创建一个deferred对象，没有参数，返回deferred对象的一个实例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;8.XHR&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1).浏览器会通过对比每一个资源的协议，主机名和端口号来判断资源是否与页面同源，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;站外其他来源的脚本同页面的交互被严格限制。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2).JSONP可以绕过浏览器的安全限制，从不同的域请求数据，使用JSONP需要服务器端提供支持。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;原理：&amp;nbsp;通过标签并插到DOM中，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;然后浏览器会接管，向src属性所指向的地址发送请求。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当服务器返回请求的时候，响应结果会被包装成一个js函数，这个请求对应的回调函数调用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3).AngularJS在$http服务中提供了一个JSONP的辅助函数，通过$http服务的jsonp方法可以发送请求：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.jsonp(&amp;#39;https//api.github.com?callback=JSON_CALLBACK&amp;#39;)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.sucess(function(data){&amp;nbsp;//数据&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当请求被发送时，AngularJS会在DOM中生成如下标签：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;&amp;nbsp;_ue_custom_node_=&amp;quot;true&amp;quot;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;注意，JSON_CALLBACK被替换成一个特地为此服务生成的自定义函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当服务器返回数据时，数据会被包装在angular.callback._0中&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;4).使用$http&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http封装了浏览器原生的XMLHttpRequest对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http({&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method&amp;nbsp;:&amp;nbsp;&amp;quot;GET&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;quot;/api/users.json&amp;quot;,&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;params&amp;nbsp;:&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#39;username&amp;#39;&amp;nbsp;:&amp;nbsp;&amp;quot;dfjk&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}).success(function(data,&amp;nbsp;status,&amp;nbsp;header,&amp;nbsp;config){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}).error(function(data,&amp;nbsp;status,&amp;nbsp;header,&amp;nbsp;config){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http方法返回一个promise对象，使用链式调用服务，不需要回调函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;5).$http.get();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$http.get(&amp;#39;/api/user.json&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;接收2个参数:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;config&amp;nbsp;可选，对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;6).$http.post();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;url&amp;nbsp;:&amp;nbsp;请求的路径&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data&amp;nbsp;:&amp;nbsp;请求的数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;config&amp;nbsp;:&amp;nbsp;可选&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7).设置$httpProvider&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;把所有请求，都添加请求头&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.module(&amp;#39;app&amp;#39;,[])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.config(function($httpProvider){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$httpProvider.defaults.headers&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.common[&amp;#39;X-Requested-By&amp;#39;]&amp;nbsp;=&amp;nbsp;&amp;#39;MyAngularApp&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;8).使用$resource&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AngularJS还提供了另外一个非常有用的服务，&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个服务可以创建一个资源对象，可以用它很方便的与支持RESTful的服务端数据源进行交互。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;安装：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bower&amp;nbsp;install&amp;nbsp;--save&amp;nbsp;angular-resouce&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;引入：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;模块依赖进来：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular.module(&amp;#39;app&amp;#39;,[&amp;#39;ngResource&amp;#39;])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;9.Restangular&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;一个专门用来从外部读取数据的AngularJS服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;10.$location服务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;解析地址栏中的URL，访问对应路由，能修改路径&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;对window.location对象的api进行优雅地封装&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;当需要内部跳转的时候，譬如说，注册完，登录后&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1).$location.path()&amp;nbsp;&amp;nbsp;获取页面当前的路径&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.psht(&amp;#39;/&amp;#39;);&amp;nbsp;&amp;nbsp;把路径修改为&amp;#39;/&amp;#39;的路由&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个是可以点击后退退回上一个页面的，如果不希望点击后退能回去，使用replace方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2).$location.replace();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;使用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.path(&amp;#39;/home&amp;#39;).replace();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3).获取编码后的完整的URL：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.absUrl();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;4).获取URL中的hash片段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.hash();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;5).获取URL中的主机&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.host();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;6).获取URL中的端口号&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.port();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7).获取URL中的协议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.protocol();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;8).获取URL中的查询串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.search();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;9).获取当前页面的URL&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.url()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;设置新的URL&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.url(&amp;#39;/home?name=jack&amp;#39;);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;1.&amp;nbsp;angular.bootstrap(element,&amp;nbsp;[modules],&amp;nbsp;[config]);&amp;nbsp;手动启动项目app&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;例子&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;app&amp;nbsp;=&amp;nbsp;angular.module(&amp;#39;demo&amp;#39;,&amp;nbsp;[])&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.controller(&amp;#39;myController&amp;#39;,&amp;nbsp;function($scope){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.model1&amp;nbsp;=&amp;nbsp;&amp;#39;hello&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}）;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;angular.bootstrap(document,&amp;nbsp;[&amp;#39;demo&amp;#39;]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;2.angular.element();&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;获得一个jquery元素，拥有以下的方法：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addClass();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;after();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;append();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attr();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bind();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;css();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eq();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;find();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hasClass();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;html();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;on();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;3.angular.equals()&amp;nbsp;用来比较2个对象是否相等&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.result&amp;nbsp;=&amp;nbsp;angular.equals($scope.use1,&amp;nbsp;$socpe.use2);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;4.angular.fromJson()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;把一个json字符串解析成一个对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;5.angular.isArray()、&amp;nbsp;angular.isDate()、&amp;nbsp;angular.isDefined()、&amp;nbsp;angular.isElement()、&amp;nbsp;angular.isFunction()、&amp;nbsp;angular.isNumber()、&amp;nbsp;angular.isObject()、&amp;nbsp;angular.isString()、&amp;nbsp;angular.isUndefined()&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;直接用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;6.angular.bind(self,&amp;nbsp;fn,&amp;nbsp;args);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;返回一个新的函数，绑定这个函数的this指向self&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;例子：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;alertTip(){&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(this.name);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;obj&amp;nbsp;=&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name&amp;nbsp;:&amp;nbsp;&amp;quot;jack&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;bindFn&amp;nbsp;=&amp;nbsp;angular.bind(obj,&amp;nbsp;alertTip,&amp;nbsp;[&amp;#39;rose&amp;#39;]);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bindFn();&amp;nbsp;//&amp;nbsp;=&amp;gt;&amp;nbsp;&amp;nbsp;jack&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;7.&amp;nbsp;angular.toJson();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;作用：&amp;nbsp;json对象转为字符串&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;8.&amp;nbsp;ng-bind-html&amp;nbsp;&amp;nbsp;绑定html结构数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;_html&amp;nbsp;=&amp;nbsp;&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Hello&amp;nbsp;world&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.myHtml&amp;nbsp;=&amp;nbsp;$sce.trustAsHtml(_html);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;注意，我们要使用到$sce服务下的trustAsHtml方法，才不会报错。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;9.ng-bind-template&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个指令是绑定多个变量，譬如：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.model_1&amp;nbsp;=&amp;nbsp;&amp;quot;hello&amp;quot;；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.model_2&amp;nbsp;=&amp;nbsp;&amp;quot;world&amp;quot;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;10.ng-class&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;点击set之后，样式变化，而且是运动的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.base-class&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;transition:all&amp;nbsp;cubic-bezier(0.250,&amp;nbsp;0.460,&amp;nbsp;0.450,&amp;nbsp;0.940)&amp;nbsp;0.5s;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;.base-class.my-class&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;color:&amp;nbsp;red;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;font-size:3em;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在循环的列表中，我们经常要用到逢奇或者逢偶，用不同的样式展示，显得更加清晰明了，这里可以直接用这个指令：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ng-class-odd=&amp;quot;&amp;#39;odd&amp;#39;&amp;quot;ng-class-even=&amp;quot;&amp;#39;even&amp;#39;&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;11.&amp;nbsp;ng-cloak&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个指令是用来解决angular闪屏问题,模型变量渲染过程需要时间。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;12.&amp;nbsp;ng-href&amp;nbsp;直接跳转&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;13.&amp;nbsp;ng-if&amp;nbsp;&amp;nbsp;当为false的时候，会移除对应的标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;14.&amp;nbsp;ng-include&amp;nbsp;直接引入html模版，&amp;nbsp;譬如&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;15.ng-maxlength&amp;nbsp;&amp;nbsp;控制输入框最大长度，如果超过，验证失败，返回false&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;而ng-minlength，也一样的用法&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;16.ng-mouseenter&amp;nbsp;ng-mouseleave&amp;nbsp;这2个指令，有的时候用来解决冒泡问题很方便。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;17.&amp;nbsp;ng-mousemove&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;18.&amp;nbsp;如果确实需要{{}}这个显示在页面，那应该告诉标签，当前标签不要解析：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ng-non-bindable&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;19.ng-open&amp;nbsp;主要是用于&amp;nbsp;details标签&amp;nbsp;本身的属性open的控制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;20.&amp;nbsp;ng-option&amp;nbsp;&amp;nbsp;用在下拉选项循环数据：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;21.&amp;nbsp;ng-paste&amp;nbsp;粘贴事件控制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;22.ng-pattern&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;23.ng-readonly&amp;nbsp;控制输入框是否只读状态&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;24.ng-required&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;25.ng-selected&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;Hello!&amp;nbsp;&amp;nbsp;Greetings!&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;26.ng-src&amp;nbsp;不解释&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;27.ng-srcset&amp;nbsp;确保的&amp;nbsp;AngularJS&amp;nbsp;代码执行前不显示图片。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Angular&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;28.ng-style&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;Sample&amp;nbsp;Text&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.myStyle&amp;nbsp;=&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:&amp;nbsp;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;29.ng-submit&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;Enter&amp;nbsp;text&amp;nbsp;and&amp;nbsp;hit&amp;nbsp;enter:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.submit&amp;nbsp;=&amp;nbsp;function()&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;($scope.text)&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.list.push(this.text);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$scope.text&amp;nbsp;=&amp;nbsp;&amp;#39;&amp;#39;;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;30.ng-switch&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;绑定一个模型变量，如果该模型变量值为a,b,c时，显示不同的标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Settings&amp;nbsp;Div&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Home&amp;nbsp;Span&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;default&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.items&amp;nbsp;=&amp;nbsp;[&amp;#39;settings&amp;#39;,&amp;nbsp;&amp;#39;home&amp;#39;,&amp;nbsp;&amp;#39;options&amp;#39;,&amp;nbsp;&amp;#39;other&amp;#39;];&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;31.ng-value&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ng-repeat=&amp;quot;name&amp;nbsp;in&amp;nbsp;names&amp;quot;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;紧接着直接用，不需要{{}}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;ng-value=&amp;quot;name&amp;quot;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;32.锚点&amp;nbsp;$anchorScroll&amp;nbsp;，&amp;nbsp;通过点击，锁定对应的锚点，来到对应的区域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;效果图如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;html:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Go&amp;nbsp;to&amp;nbsp;anchor&amp;nbsp;{{x}}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Anchor&amp;nbsp;{{x}}&amp;nbsp;of&amp;nbsp;5&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;js：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;首先我们要注入2个服务，一个是$anchorScroll负责跑起来，一个是$location服务，负责更改hash&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;$scope.gotoAnchor&amp;nbsp;=&amp;nbsp;function(x)&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;newHash&amp;nbsp;=&amp;nbsp;&amp;#39;anchor&amp;#39;&amp;nbsp;+&amp;nbsp;x;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;($location.hash()&amp;nbsp;!==&amp;nbsp;newHash)&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$location.hash(&amp;#39;anchor&amp;#39;&amp;nbsp;+&amp;nbsp;x);&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$anchorScroll();&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-weight: bold; font-family: &amp;quot;comic sans ms&amp;quot;; font-size: 14px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;",
    "face": "/public/images/3.jpg",
    "title": "Angular1.3相关内容~",
    "articletypeid": 1,
    "studynodeid": null,
    "projectid": null,
    "created_at": "2016-11-04 11:55:31",
    "updated_at": "2017-01-23 09:43:26",
    "desc": "Angular数据双向绑定，代码模块化，依赖注入以及强大的指令、服务等..."
};
/*===================================== 33333 ==========================*/

const state = {
  currentDetailData: null,
  keyword: '',
  clientHeight: 0,
  slidelistdata: slidelistdata,
  navlistdata: navlistdata,
  isLoading: false,
  projectUrlData: [
    {
      name: 'QIMIN购物网站-Vue.js',
      url: 'http://heliujie.com/public/works/qimin/index.html'
    },
    {
      name: '选项卡组件-VueComponent',
      url: 'http://heliujie.com/public/works/vue-components/components/tab/index.html'
    },
    {
      name: '滚屏网页-原生js',
      url: 'http://heliujie.com/public/works/scrollpage/index.html'
    },
    {
      name: '分页指令-Angular.js',
      url: 'http://heliujie.com/public/works/angular/paging/index.html'
    },
    {
      name: '路由应用Demo-Angular.ui.router.js',
      url: 'http://heliujie.com/public/works/angular/treemenu/index.html#/home/index'
    }
  ],
  projectMobileData: [
    {
      name: '仿小米官网-vue.js',
      queryData: {
        projectid: 1
      }
    },
    {
      name: '仿饿了么-vue.js',
      queryData: {
        projectid: 2
      }
    }
  ]
};

const mutations = {
  TestAction(state) {
    state.test.push({
      name: "测试vuex",
      id: "1"
    });
  }
};

export default new Vuex.Store({
  state: state,
  mutations: mutations
});


